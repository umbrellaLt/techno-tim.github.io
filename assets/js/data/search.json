[ { "title": "Meet keepalived - High Availability and Load Balancing in One", "url": "/posts/keepalived-ha-loadbalancer/", "categories": "homelab", "tags": "homelab, keepalived, self-hosted, linux, ubuntu", "date": "2021-12-11 07:00:00 -0600", "snippet": "In my quest to make my services highly available I decided to use keepalived. keepalived is a framework for both load balancing and high availability that implements VRRP. This is a protocol that you see on some routers and has been implemented in keepalived. It creates a Virtual IP (or VIP, or floating IP) that acts as a gateway to route traffic to all participating hosts. This VIP that can provide a high availability setup and fail over to another host in the event that one is down. In this video, we’ll set up and configure keepalived, we’ll test our configuration to make sure it’s working, and we’ll also talk about some advanced use cases like load balancing.Watch Video(see video description for links to gear, discord, and other ways to connect.)Installationsudo apt updatesudo apt install keepalivedsudo apt install libipset13ConfigurationFind your IPip a edit your configsudo nano /etc/keepalived/keepalived.confFirst nodevrrp_instance VI_1 { state MASTER interface ens18 virtual_router_id 55 priority 150 advert_int 1 unicast_src_ip 192.168.30.31 unicast_peer { 192.168.30.32 } authentication { auth_type PASS auth_pass C3P9K9gc } virtual_ipaddress { 192.168.30.100/24 }}Second nodevrrp_instance VI_1 { state BACKUP interface ens18 virtual_router_id 55 priority 100 advert_int 1 unicast_src_ip 192.168.30.32 unicast_peer { 192.168.30.31 } authentication { auth_type PASS auth_pass C3P9K9gc } virtual_ipaddress { 192.168.30.100/24 }}Start and enable the servicesudo systemctl enable --now keepalived.servicestopping the servicesudo systemctl stop keepalived.serviceget the statussudo systemctl status keepalived.servicenginx examplecreate index.html to mountnano /home/user/docker_volumes/nginx/index.html&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html lang=&quot;en&quot;&amp;gt;&amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt; &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&amp;gt; &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&amp;gt; &amp;lt;title&amp;gt;Hello From Primary Node&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; h1{ font-weight:lighter; font-family: Arial, Helvetica, sans-serif; } &amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt; &amp;lt;h1&amp;gt; Hello World 1 &amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;install nginx via dockerdocker run --name some-nginx -v /home/user/docker_volumes/nginx:/usr/share/nginx/html:ro -d -p 8080:80 nginxvisit your VIP on port 8080PiHoleIn this video we covered the PiHole use case. After setting this up, be sure to check out the tutorial on Gravity Synchttps://techno-tim.github.io/posts/ha-pi-hold-gravity-sync/" }, { "title": "HomeLab Services Tour Late 2021 - What am I Self-Hosting in my HomeLab?", "url": "/posts/homelab-services-tour-2021/", "categories": "homelab", "tags": "homelab, proxmox, grafana, logging, dns, dashboard, kubernetes, certificates, shlink, littlelink-server, portainer, self-hosted, docker, rancher, pi-hole, heimdall, plex, truenas, jekyll, grafana, loki, monitoring, uptime-kuma, traefik, nas, unifi, virtulization, containerization", "date": "2021-12-04 07:00:00 -0600", "snippet": "After showing off my Home Lab hardware in my late 2021 tour, many of you asked what services are self-hosted in this stack. This is always a moving target so I decided it was time to share which services I am running here at home. Today, we walk through everything I am hosting including: Dashboard, Hypervisor, Virtualization, Containerization, Network Attached Storage (NAS), DNS, Network Management, Home Security, Kubernetes, Kubernetes Storage, Docker, Reverse Proxy, Certificates, Monitoring, Logging, Syncing Data, File Sharing, Self-Promotion (Contact Page), Link Shortening, Home Entertainment, Home Automation, Battery / UPS Monitoring, CMS, Static Site Generators, Dynamic DNS, CI/CD, and many, many others. Enjoy the virtual tour!Worth mentioning, I have videos on almost every service mentioned in this video!Watch Video(see video description for links to gear, discord, and other ways to connect.)Be sure to check out the 2021 HomeLab hardware tour here" }, { "title": "Meet Grafana LOKI, a Log Aggregation System for Everything", "url": "/posts/grafana-loki/", "categories": "homelab", "tags": "homelab, proxmox, grafana, logging, promtail, prometheus", "date": "2021-11-20 07:00:00 -0600", "snippet": "I’ve been on a quest to find a new logging system. I’ve use quite a few in the past, some open source, some proprietary, and some home grown, but recently I’ve decided to switch. I’ve switched to Grafana Loki for all of my logs for all of my systems - this includes machines, devices, docker systems and hosts, and my all of my kubernetes clusters. If you’re thinking of using Grafana and are also looking for a fast way to log all of your systems, join me as we discuss and configure Grafana Loki.Watch Video(see video description for links to gear, discord, and other ways to connect.)Docker SetupSee this post on how to install docker and docker-composeRunning the containerIf you’re using Docker composemkdir grafanamkdir lokimkdir promtailtouch docker-compose.ymlnano docker-compose.yml # copy the contents from belowlsdocker-compose up -d --force-recreate # be sure you&#39;ve created promtail-config.yml and loki-config.yml before running thisdocker-compose.ymlversion: &quot;3&quot;networks: loki:services: loki: image: grafana/loki:2.4.0 volumes: - /home/serveradmin/docker_volumes/loki:/etc/loki ports: - &quot;3100:3100&quot; restart: unless-stopped command: -config.file=/etc/loki/loki-config.yml networks: - loki promtail: image: grafana/promtail:2.4.0 volumes: - /var/log:/var/log - /home/serveradmin/docker_volumes/promtail:/etc/promtail # ports: # - &quot;1514:1514&quot; # this is only needed if you are going to send syslogs restart: unless-stopped command: -config.file=/etc/promtail/promtail-config.yml networks: - loki grafana: image: grafana/grafana:latest user: &quot;1000&quot; volumes: - /home/serveradmin/docker_volumes/grafana:/var/lib/grafana ports: - &quot;3000:3000&quot; restart: unless-stopped networks: - lokiLoki Confignano loki/loki-config.ymlloki-config.ymlauth_enabled: falseserver: http_listen_port: 3100 grpc_listen_port: 9096common: path_prefix: /tmp/loki storage: filesystem: chunks_directory: /tmp/loki/chunks rules_directory: /tmp/loki/rules replication_factor: 1 ring: instance_addr: 127.0.0.1 kvstore: store: inmemoryschema_config: configs: - from: 2020-10-24 store: boltdb-shipper object_store: filesystem schema: v11 index: prefix: index_ period: 24hruler: alertmanager_url: http://localhost:9093Promtail Confignano promtail/promtail-config.ymlpromtail-config.ymlserver: http_listen_port: 9080 grpc_listen_port: 0positions: filename: /tmp/positions.yamlclients: - url: http://loki:3100/loki/api/v1/pushscrape_configs:# local machine logs- job_name: local static_configs: - targets: - localhost labels: job: varlogs __path__: /var/log/*log ## docker logs#- job_name: docker # pipeline_stages:# - docker: {}# static_configs:# - labels:# job: docker# __path__: /var/lib/docker/containers/*/*-json.log# syslog target#- job_name: syslog# syslog:# listen_address: 0.0.0.0:1514 # make sure you also expose this port on the container# idle_timeout: 60s# label_structured_data: yes# labels:# job: &quot;syslog&quot;# relabel_configs:# - source_labels: [&#39;__syslog_message_hostname&#39;]# target_label: &#39;host&#39;Loki Docker DriverInstall docker plugindocker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissionsEdit docker daemon configsudo nano /etc/docker/daemon.jsondaemon.json{ &quot;log-driver&quot;: &quot;loki&quot;, &quot;log-opts&quot;: { &quot;loki-url&quot;: &quot;http://localhost:3100/loki/api/v1/push&quot;, &quot;loki-batch-size&quot;: &quot;400&quot; }}Restart docker daemon. sudo systemctl restart dockerYou will also need to recreate your containers after applying this setting *LogQL sample queriesQuery all logs from the varlogs stream{job=&quot;varlogs&quot;} Query all logs from the varlogs stream and filter on docker{job=&quot;varlogs&quot;} |= &quot;docker&quot;Query all logs from the container_name label of uptime-kuma and filter on host of juno{container_name=&quot;uptime-kuma&quot;, host=&quot;juno&quot;}Read more about LogQL hereARM CPU (Raspberry Pi)There is a workaround for using this with ARM CPUs. Credit to AndreiTelteu for finding this in this discussiondelete /etc/docker/daemon.jsonAdd the vector service to the docker-compose.yml file vector: image: timberio/vector:0.18.1-debian volumes: - /var/run/docker.sock:/var/run/docker.sock - /home/serveradmin/docker_volumes/vector/vector-config.toml:/etc/vector/vector.toml:ro ports: - &quot;8383:8383&quot; restart: unless-stopped networks: - lokiRun this commandmkdir vectorcd vectornano vector-config.tomlpaste this config in the file:[sources.docker-local] type = &quot;docker_logs&quot; docker_host = &quot;/var/run/docker.sock&quot; exclude_containers = [] # Identify zero-width space as first line of a multiline block. multiline.condition_pattern = &#39;^\\x{200B}&#39; # required multiline.mode = &quot;halt_before&quot; # required multiline.start_pattern = &#39;^\\x{200B}&#39; # required multiline.timeout_ms = 1000 # required, milliseconds [sinks.loki] # General type = &quot;loki&quot; # required inputs = [&quot;docker*&quot;] # required endpoint = &quot;http://loki:3100&quot; # required # Auth auth.strategy = &quot;bearer&quot; # required auth.token = &quot;none&quot; # required # Encoding encoding.codec = &quot;json&quot; # required # Healthcheck healthcheck.enabled = false # optional, default # Loki Labels labels.forwarder = &#39;vector&#39; labels.host = &#39;&#39; labels.container_name = &#39;&#39; labels.compose_service = &#39;&#39; labels.compose_project = &#39;&#39; labels.source = &#39;&#39; labels.category = &#39;dockerlogs&#39;Credits to this post for the config file: grafana/loki#2361 (comment)Kubernetes SetupIf you’re looking to set this up in kubernetes, see this post" }, { "title": "Installing Grafana Loki with Helm on Kubernetes", "url": "/posts/grafana-loki-kubernetes/", "categories": "kubernetes", "tags": "homelab, proxmox, grafana, logging, promtail, prometheus, kubernetes, helm", "date": "2021-11-20 06:00:00 -0600", "snippet": "In my previous video (Meet Grafana LOKI, a log aggregation system for everything and post, I promised that I would also explain how to install Granfana Loki on Kubernetes using helm. If you’re looking to set this up in docker-compose, be sure to check out this videoInstalling helmThink of helm as a package manager for kubernetes. It’a an easy way to bundle and deploy config to kubernetes with versioning. If you need to install helm visit helm.shInstalling Loki StackFirst add Loki’s chart repository to helmhelm repo add grafana https://grafana.github.io/helm-chartsThen update the chart repositoryhelm repo updateThis command will: install grafana install prometheus install loki enable persistance for your stack and create a PVChelm upgrade --install loki grafana/loki-stack --set grafana.enabled=true,prometheus.enabled=true,prometheus.alertmanager.persistentVolume.enabled=false,prometheus.server.persistentVolume.enabled=false,loki.persistence.enabled=true,loki.persistence.storageClassName=nfs-client,loki.persistence.size=5GiYou’ll want to set loki.persistence.storageClassName=nfs-client to your StorageClassIn this example, I am using nf-client which is the Kubernetes NFS Subdir External ProvisionerAccessing the Grafana DashboardTo access your Grafana dashboard you can runkubectl port-forward --namespace &amp;lt;YOUR-NAMESPACE&amp;gt; service/loki-grafana 3000:80To get the password for the admin user runkubectl get secret --namespace &amp;lt;YOUR-NAMESPACE&amp;gt; loki-grafana -o jsonpath=&quot;{.data.admin-password}&quot; | base64 --decode ; echoThis should print out your passwordYou can now access your dashboard on http://localhost:3000Ingress with TraefikIf you want to create an IngressRoute and you are using traefik can you apply the followingingress.ymlapiVersion: traefik.containo.us/v1alpha1kind: IngressRoutemetadata: name: loki-grafana-ingress annotations: kubernetes.io/ingress.class: traefik-internal # change with your valuespec: entryPoints: - websecure routes: - match: Host(`grafana.example.com`) # change with your value kind: Rule services: - name: loki-grafana port: 80kubectl apply -f ingress.ymlYou should now be able to access your dashboard on https://grafana.example.comLogQL sample queriesQuery all logs from the container label{container=&quot;uptime-kuma&quot;} query all logs from the container stream and filter on error{container=&quot;uptime-kuma&quot;} |= &quot;error&quot;query all logs from the pod label of uptime-kuma-8d45g32fd-lk8rl{pod=&quot;uptime-kuma-8d45g32fd-lk8rl&quot;}Read more about LogQL hereUpgrading Loki StackTo upgrade, you run the same command you use to install it, with an updated charthelm repo updatehelm upgrade --install loki grafana/loki-stack --set grafana.enabled=true,prometheus.enabled=true,prometheus.alertmanager.persistentVolume.enabled=false,prometheus.server.persistentVolume.enabled=false,loki.persistence.enabled=true,loki.persistence.storageClassName=nfs-client,loki.persistence.size=5Gi" }, { "title": "Techno Tim HomeLab and NEW Server Room Tour! (Late 2021)", "url": "/posts/homelab-tour-2021/", "categories": "homelab", "tags": "homelab, hardware", "date": "2021-11-06 08:00:00 -0500", "snippet": "Well, here it is! My Late 2021 Server Rack and HomeLab tour! This is a special one because I just revamped and remodeled a spot in the basement for my new data center / server room (still picking out a name for it). I’ve upgraded, replaced, added, and consolidated quite a bit since my last tour! New servers, new networking, new UPS, new Raspberry Pi, and even a whole entire wall of tech gear. I also added lots of automation and IoT devices! Join me as we walk through my server room upgrade!Watch Video(see video description for links to gear, discord, and other ways to connect.)(Affiliate links are included in this description. I may receive a small commission at no cost to you.)📦 Gear in this video 📦2u Rack Shelf - https://amzn.to/2ZVSJKNAPC 1500VA UP - https://amzn.to/3GXLJh6Nest Protect - https://amzn.to/3BLhc21Hue Iris Light - https://amzn.to/3ET5Gn8Hue Motion &amp;amp; Temp https://amzn.to/3qb1FXfAxxtra Power Strip - https://amzn.to/3qbzIhTAmazon Power Strip - https://amzn.to/3mMN16wWall Control Galvanized Steel Pegboard - https://amzn.to/3bJ8R4sHue Dimmer Switch - https://amzn.to/3wj9StsHue Light Strips - https://amzn.to/3wkkLLDHue Smart Bulb Starter Kit - https://amzn.to/31renqsHue Motion &amp;amp; Temp Detection - https://amzn.to/3o7HOFRCloud Lamp - https://amzn.to/3GZji24Pi 4 B - https://amzn.to/3BTPKzcPoE Pi Hat - https://amzn.to/3GUqY5OPi Zero - https://amzn.to/3o4LGapHD Homerun - https://amzn.to/2ZXxmYSIntel NUC - https://amzn.to/3BKE3uR24 Port Patch Panel - https://amzn.to/3GYA4yoWall Mount Patch Panel - https://amzn.to/3o2AxadSlim Network Cables - https://amzn.to/3kbYV85UniFi Flex Mini - https://amzn.to/3GXMzKMUniFi UDM Pro - https://amzn.to/3GZkanmUniFi 24 Port PoE Gen 2 Switch Pro - https://amzn.to/3GTmUCXPC Conversion Case - https://amzn.to/3qgkFDJ18u Server Rack - https://amzn.to/3kbZdvH1u Rails - https://amzn.to/3GSd701APC 600 VA UPS - https://amzn.to/3mMxsM1NetApp DD4246 Disk Shelf - https://amzn.to/3o2AOKhSuperMicro 1u Servers - https://amzn.to/3q9M7TJ8 TB IronWolf NAS Drives - https://amzn.to/3EQXXGw🚀 Kits 🚀Rackmount Servers - https://kit.co/TechnoTim/rackmount-home-lab-serversHomeLab Racks - https://kit.co/TechnoTim/server-rack-homelab1u Servers - https://kit.co/TechnoTim/techno-tim-1u-serverNetworking Stack - https://kit.co/TechnoTim/techno-tim-network-stackRaspberry Pi with PoE - https://kit.co/TechnoTim/best-raspberry-pi-with-poeHome Security - https://kit.co/TechnoTim/techno-tim-home-securityStorage and Hard Drives - https://kit.co/TechnoTim/best-ssd-hard-drive-flash-storageHomeLab and Server Room Upgrade 2021 - https://kit.co/TechnoTim/techno-tim-homelab-and-server-room-upgrade-2021" }, { "title": "Virtualize Windows 11 with Proxmox the Right Way!", "url": "/posts/windows-11-proxmox/", "categories": "homelab", "tags": "homelab, proxmox, windows-11, virtualization", "date": "2021-10-22 08:00:00 -0500", "snippet": "Windows 11 is here and with it comes new hardware requirements. These requirements not only affect physical hardware but also virtual hardware too. The TPM 2.0 requirement for Windows 11 is shaking the tech community, HomeLab community, and even virtualization too. Well have no fear, today we’re going to virtualize Windows 11 with a virtual TPM chip! We’re going to create a virtual machine according to proxmox best practices and even install a virtual TMP chip so that you can test Windows 11 with your hardware and software before upgrading Windows 10 in your HomeLab or production environment without any hacks!Watch Video(see video description for links to gear, discord, and other ways to connect.)LinksWindows 11 Downloadhttps://www.microsoft.com/en-us/software-download/windows11KVM/QEMU Windows guest drivers (virtio-win) downloadhttps://github.com/virtio-win/virtio-win-pkg-scriptsNeed to Upgrade to Proxmox 7?https://techno-tim.github.io/posts/proxmox-7/" }, { "title": "Meet Uptime Kuma, a Fancy Open Source Uptime Monitor for all your HomeLab Monitoring Needs", "url": "/posts/uptime-kuma/", "categories": "self-hosted", "tags": "homelab, uptime-kuma, self-hosted, docker, monitoring, alerting, open-source", "date": "2021-10-03 10:00:00 -0500", "snippet": "You’ve spun up lots of self-hosted services in your HomeLab but you haven’t set up monitoring and alerting yet. We’ll be glad you waited because today well set up Uptime Kuma to do just that. Uptime Kuma is a self-hosted, open source, fancy uptime monitoring and alerting system. It can monitor HTTP, HTTP with keyword, TCP, Ping, and even DNS systems!https://github.com/louislam/uptime-kumaWatch Video(see video description for links to gear, discord, and other ways to connect.)Docker SetupSee this post on how to install docker and docker-composeRunning the containerIf you’re using Docker composemkdir uptime-kumacd uptime-kumatouch docker-compose.ymlnano docker-compose.yml # copy the contents from belowmkdir datalsdocker-compose up -d --force-recreatedocker-compose.yml---version: &quot;3.1&quot;services: uptime-kuma: image: louislam/uptime-kuma:1 container_name: uptime-kuma volumes: - /home/serveradmin/docker_volumes/uptime-kuma/data:/app/data ports: - 3001:3001 restart: unless-stopped security_opt: - no-new-privileges:trueIf you’re using Rancher, Portainer, Open Media Vault, Unraid, or anything else with a GUI, just copy and paste the environment variables, ports, and volumes from above into the form on the web page." }, { "title": "Network UPS Tools (NUT) Ultimate Guide", "url": "/posts/NUT-server-guide/", "categories": "homelab", "tags": "homelab, nut, self-hosted, docker, ups, pdu, open-source", "date": "2021-09-25 10:00:00 -0500", "snippet": "Meet NUT Server, or Network UPS Tools. It’s an open UPS networking monitoring tool that runs on many different operating systems and processors. This means you can run the server on Linux, MacOS, or BSD and run the client on Windows, MacOS, Linux, and more. It’ perfect for your Pi, server, or desktop. It works with hundreds of UPS devices, PDUs, and many other power management systems.This is the ultimate guide to configuring Network UPS Tools (NUT). We cover everything from installing and configuring the server on as Raspberry Pi, configuring the client on Windows and Linux, configure a charting and graphing website to visualize NUT data, spin up an additional web site use Docker, and finally set up monitoring and alerting to automate shutdowns of your machine.https://networkupstools.org/Also, note to self, don’t eat a salad before you record a video….Watch Video(see video description for links to gear, discord, and other ways to connect.)NUT UPS Serverplug in upslsusbshould see something likeBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 001 Device 019: ID 09ae:2012 Tripp LiteBus 001 Device 002: ID 2109:3431 VIA Labs, Inc. HubBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hubsudo apt updatesudo apt install nut nut-client nut-serversudo nut-scanner -Ushould see something liketripp lite[nutdev1] driver = &quot;usbhid-ups&quot; port = &quot;auto&quot; vendorid = &quot;09AE&quot; productid = &quot;2012&quot; product = &quot;Tripp Lite UPS&quot; vendor = &quot;Tripp Lite&quot; bus = &quot;001&quot;apc 1500[nutdev1] driver = &quot;usbhid-ups&quot; port = &quot;auto&quot; vendorid = &quot;051D&quot; productid = &quot;0002&quot; product = &quot;Back-UPS XS 1500M FW:947.d10 .D USB FW:d10&quot; serial = &quot;3xxxxxxxxxxx&quot; vendor = &quot;Tripp Lite&quot; bus = &quot;001&quot;apc 850[nutdev3] driver = &quot;usbhid-ups&quot; port = &quot;auto&quot; vendorid = &quot;051D&quot; productid = &quot;0002&quot; product = &quot;Back-UPS ES 850G2 FW:931.a10.D USB FW:a&quot; serial = &quot;3xxxxxxxxxxx&quot; vendor = &quot;American Power Conversion&quot; bus = &quot;001&quot;sudo nano /etc/nut/ups.confpollinterval = 1maxretry = 3[tripplite] driver = usbhid-ups port = auto desc = &quot;Tripp Lite 1500VA SmartUPS&quot; vendorid = 09ae productid = 2012[apc-network] driver = usbhid-ups port = auto desc = &quot;APC Back-UPS XS 1500&quot; vendorid = 051d productid = 0002 serial = 3xxxxxxxxx[apc-modem] driver = usbhid-ups port = auto desc = &quot;APC 850 VA&quot; vendorid = 051d productid = 0002 serial = 3xxxxxxxxxsudo nano /etc/nut/upsmon.confMONITOR tripplite@localhost 1 admin secret masterMONITOR apc-modem@localhost 1 admin secret masterMONITOR apc-network@localhost 1 admin secret mastersudo nano /etc/nut/upsd.conflocal hostLISTEN 127.0.0.1 3493 all interfaceLISTEN 0.0.0.0 3493 sudo nano /etc/nut/nut.confMODE=netserversudo nano /etc/nut/upsd.users[monuser] password = secret admin mastersudo nano /etc/udev/rules.d/99-nut-ups.rulesSUBSYSTEM!=&quot;usb&quot;, GOTO=&quot;nut-usbups_rules_end&quot;# TrippLite# e.g. TrippLite SMART1500LCD - usbhid-upsACTION==&quot;add|change&quot;, SUBSYSTEM==&quot;usb|usb_device&quot;, SUBSYSTEMS==&quot;usb|usb_device&quot;, ATTR{idVendor}==&quot;09ae&quot;, ATTR{idProduct}==&quot;2012&quot;, MODE=&quot;664&quot;, GROUP=&quot;nut&quot;, RUN+=&quot;/sbin/upsdrvctl stop; /sbin/upsdrvctl start&quot;LABEL=&quot;nut-usbups_rules_end&quot;reboot (because it’s easy)orsudo service nut-server restartsudo service nut-client restartsudo systemctl restart nut-monitorsudo upsdrvctl stopsudo upsdrvctl startAPC UPS 950 vaquery device by USB buslsusb -D /dev/bus/usb/001/057Device Descriptor: bLength 18 bDescriptorType 1 bcdUSB 2.00 bDeviceClass 0 bDeviceSubClass 0 bDeviceProtocol 0 bMaxPacketSize0 64 idVendor 0x051d American Power Conversion idProduct 0x0002 Uninterruptible Power Supply bcdDevice 0.90 iManufacturer 1 iProduct 2 iSerial 3 bNumConfigurations 1 Configuration Descriptor: bLength 9 bDescriptorType 2 wTotalLength 0x0022 bNumInterfaces 1 bConfigurationValue 1 iConfiguration 0 bmAttributes 0xe0 Self Powered Remote Wakeup MaxPower 2mA Interface Descriptor: bLength 9 bDescriptorType 4 bInterfaceNumber 0 bAlternateSetting 0 bNumEndpoints 1 bInterfaceClass 3 Human Interface Device bInterfaceSubClass 0 bInterfaceProtocol 0 iInterface 0 HID Device Descriptor: bLength 9 bDescriptorType 33 bcdHID 1.00 bCountryCode 33 US bNumDescriptors 1 bDescriptorType 34 Report wDescriptorLength 1049 Report Descriptors: ** UNAVAILABLE ** Endpoint Descriptor: bLength 7 bDescriptorType 5 bEndpointAddress 0x81 EP 1 IN bmAttributes 3 Transfer Type Interrupt Synch Type None Usage Type Data wMaxPacketSize 0x0008 1x 8 bytes bInterval 100NUT CGI Serversudo apt install apache2 nut-cgisudo nano /etc/nut/hosts.confMONITOR tripplite@localhost &quot;Tripp Lite 1500VA SmartUPS - Rack&quot;MONITOR apc-modem@localhost &quot;APC 850 VA - Wall&quot;MONITOR apc-network@localhost &quot;APC Back-UPS XS 1500 - Rack&quot;sudo a2enmod cgisudo systemctl restart apache2sudo nano /etc/nut/upsset.confI_HAVE_SECURED_MY_CGI_DIRECTORYvisithttp://your.ip.adddress/cgi-bin/nut/upsstats.cgiWebnut Docker Containermkdir webnutcd webnutnano docker-compose.ymlpaste contents and saveversion: &quot;3.1&quot;services: nut: image: teknologist/webnut container_name: webnut environment: - UPS_HOST=ip.address.of.nut.server - UPS_PORT=3493 - UPS_USER=admin - UPS_PASSWORD=secret restart: unless-stopped security_opt: - no-new-privileges:true networks: - proxy ports: - 6543:6543networks: proxy: external: truedocker-compose up -d --force-recreateLinux NUT Client (remote)sudo apt install nut-clientthen runupsc to verifyverify you can connectupsc tripplite@ip.address.of.serversudo nano /etc/nut/upsmon.confRUN_AS_USER rootMONITOR apc-modem@ip.address.of.nut.server 1 admin secret slaveMINSUPPLIES 1SHUTDOWNCMD &quot;/sbin/shutdown -h&quot;NOTIFYCMD /usr/sbin/upsschedPOLLFREQ 2POLLFREQALERT 1HOSTSYNC 15DEADTIME 15POWERDOWNFLAG /etc/killpowerNOTIFYMSG ONLINE &quot;UPS %s on line power&quot;NOTIFYMSG ONBATT &quot;UPS %s on battery&quot;NOTIFYMSG LOWBATT &quot;UPS %s battery is low&quot;NOTIFYMSG FSD &quot;UPS %s: forced shutdown in progress&quot;NOTIFYMSG COMMOK &quot;Communications with UPS %s established&quot;NOTIFYMSG COMMBAD &quot;Communications with UPS %s lost&quot;NOTIFYMSG SHUTDOWN &quot;Auto logout and shutdown proceeding&quot;NOTIFYMSG REPLBATT &quot;UPS %s battery needs to be replaced&quot;NOTIFYMSG NOCOMM &quot;UPS %s is unavailable&quot;NOTIFYMSG NOPARENT &quot;upsmon parent process died - shutdown impossible&quot;NOTIFYFLAG ONLINE SYSLOG+WALL+EXECNOTIFYFLAG ONBATT SYSLOG+WALL+EXECNOTIFYFLAG LOWBATT SYSLOG+WALLNOTIFYFLAG FSD SYSLOG+WALL+EXECNOTIFYFLAG COMMOK SYSLOG+WALL+EXECNOTIFYFLAG COMMBAD SYSLOG+WALL+EXECNOTIFYFLAG SHUTDOWN SYSLOG+WALL+EXECNOTIFYFLAG REPLBATT SYSLOG+WALLNOTIFYFLAG NOCOMM SYSLOG+WALL+EXECNOTIFYFLAG NOPARENT SYSLOG+WALLRBWARNTIME 43200NOCOMMWARNTIME 600FINALDELAY 5set net clientsudo nano /etc/nut/nut.confMODE=netclientrestart servicesystemctl restart nut-clientcheck statussystemctl status user-clientWindows NUT Clienthttps://github.com/gawindx/WinNUT-Client/releasesscheduling on the remote systemsudo nano /etc/nut/upssched.confCMDSCRIPT /etc/nut/upssched-cmdPIPEFN /etc/nut/upssched.pipeLOCKFN /etc/nut/upssched.lockAT ONBATT * START-TIMER onbatt 30AT ONLINE * CANCEL-TIMER onbatt onlineAT ONBATT * START-TIMER earlyshutdown 30AT LOWBATT * EXECUTE onbattAT COMMBAD * START-TIMER commbad 30AT COMMOK * CANCEL-TIMER commbad commokAT NOCOMM * EXECUTE commbadAT SHUTDOWN * EXECUTE powerdownAT SHUTDOWN * EXECUTE powerdownsudo nano /etc/nut/upssched-cmd#!/bin/sh case $1 in onbatt) logger -t upssched-cmd &quot;UPS running on battery&quot; ;; earlyshutdown) logger -t upssched-cmd &quot;UPS on battery too long, early shutdown&quot; /usr/sbin/upsmon -c fsd ;; shutdowncritical) logger -t upssched-cmd &quot;UPS on battery critical, forced shutdown&quot; /usr/sbin/upsmon -c fsd ;; upsgone) logger -t upssched-cmd &quot;UPS has been gone too long, can&#39;t reach&quot; ;; *) logger -t upssched-cmd &quot;Unrecognized command: $1&quot; ;; esacmake it executable (should already be)chmod +x /etc/nut/upssched-cmdBe sure PIPEFN and LOCKFN point to a folder that esists, I’ve seen it point to /etc/nut/upssched/ instead of /etc/nut If it does, create the folder or update these variables.mkdir /etc/nut/upssched/testsystemctl restart nut-clientthen pull the plug on the ups connected to the master, check syslogstail /var/log/syslogshould see the logsmachine should shutdown" }, { "title": "Meet File Browser, a Small but Mighty Web File Browser", "url": "/posts/meet-file-browser/", "categories": "self-hosted", "tags": "homelab, portainer, self-hosted, docker, rancher, file-browser", "date": "2021-09-04 10:00:00 -0500", "snippet": "Meet File Browser, an open source, self-hosted alternative to services like Dropbox and other web based file browsers. Today we’ll configure a containerized version of File Browser and have you up and going in just a few minutes. We’ll also walk through creating, editing, moving, copying, and even sharing files and folders so that you get a better understanding about what File Browser is all about.Watch Video(see video description for links to gear, discord, and other ways to connect.)Docker SetupSee this post on how to install docker and docker-composeRunning the containerIf you’re using Docker composemkdir filebrowsercd filebrowsertouch docker-compose.ymlnano docker-compose.yml # copy the contents from belowtouch filebrowser.dbdocker-compose up -d --force-recreatedocker-compose.yml---version: &#39;3&#39;services: file-browser: image: filebrowser/filebrowser container_name: file-browser user: 1000:1000 ports: - 8081:80 volumes: - /home/serveradmin/:/srv - /home/serveradmin/filebrowser/filebrowser.db:/database.db restart: unless-stopped security_opt: - no-new-privileges:trueIf you’re using Rancher, Portainer, Open Media Vault, Unraid, or anything else with a GUI, just copy and paste the environment variables above into the form on the web page." }, { "title": "How to Install Docker and Docker Compose", "url": "/posts/docker-compose-install/", "categories": "docker", "tags": "homelab, docker-docker-compose", "date": "2021-08-14 11:00:00 -0500", "snippet": "Install DockerIf you have an existing version of Docker install, it might be best to remove it first. See the cleaning up section at the endsudo apt-get updatesudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg \\ lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ &quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/nullsudo apt-get updatesudo apt-get install docker-ce docker-ce-cli containerd.ioCheck Installdocker -vInstall Docker Composesudo curl -L &quot;https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-composesudo chmod +x /usr/local/bin/docker-composeCheck Installdocker-compose -vUse Docker without sudosudo usermod -aG docker $USERYou’ll need to log out then back in to apply thisCleaning UpIf you need to uninstall Docker, run the followingsudo apt-get remove docker docker-engine docker.io containerd runc" }, { "title": "Self-Hosted, DIY, Open Source Alternative to Linktree", "url": "/posts/open-source-linktree-alt/", "categories": "self-hosted", "tags": "homelab, pi-hole, dns, littlelink-server, portainer, self-hosted, docker, rancher", "date": "2021-08-14 11:00:00 -0500", "snippet": "Meet LittleLink &amp;amp; LittleLink-Server - a DIY, self hosted, and open source alternative to the popular service Linktree. This web site inside of a container allows you to create and host your own web site with all of your social information and links, giving your followers multiple ways to connect with you! In this video we talk about what LittleLink-Server is, what it does, and how to create your own site using this Docker container with only a few environment variables, no knowledge of web development required. Be sure to check the documentation for details!Watch Video(see video description for gear links)You can find the LittleLink-Server repo here.Docker SetupSee this post on how to install docker and docker-composeRunning the containermkdir littlelink-servercd littlelink-servertouch docker-compose.ymlIf you’re using Docker compose (see the GitHub repo for the latest file)docker-compose.yml---version: &#39;3&#39;services: little-link: image: ghcr.io/techno-tim/littlelink-server:latest container_name: littlelink-server environment: - META_TITLE=Techno Tim - META_DESCRIPTION=Techno Tim Link page - META_AUTHOR=Techno Tim - THEME=Dark - FAVICON_URL=https://pbs.twimg.com/profile_images/1286144221217316864/qIAsKOpB_200x200.jpg - AVATAR_URL=https://pbs.twimg.com/profile_images/1286144221217316864/qIAsKOpB_200x200.jpg - AVATAR_2X_URL=https://pbs.twimg.com/profile_images/1286144221217316864/qIAsKOpB_400x400.jpg - AVATAR_ALT=Techno Tim Profile Pic - NAME=TechnoTim - BIO=Hey! Just a place where you can connect with me! - GITHUB=https://github.com/timothystewart6 - TWITTER=https://twitter.com/TechnoTimLive - INSTAGRAM=https://www.instagram.com/techno.tim - YOUTUBE=https://www.youtube.com/channel/UCOk-gHyjcWZNj3Br4oxwh0A - TWITCH=https://www.twitch.tv/technotim/ - DISCORD=https://discord.gg/DJKexrJ - TIKTOK=https://www.tiktok.com/@technotim - KIT=https://kit.co/TechnoTim # - FACEBOOK=https://facebook.com # - FACEBOOK_MESSENGER=https://facebook.com # - LINKED_IN=https://linkedin.com # - PRODUCT_HUNT=https://www.producthunt.com/ # - SNAPCHAT=https://www.snapchat.com/ # - SPOTIFY=https://www.spotify.com/ # - REDDIT=https://www.reddit.com/ # - MEDIUM=https://medium.com # - PINTEREST=https://www.pinterest.com/ # - EMAIL=you@example.com # - EMAIL_ALT=you@example.com # - SOUND_CLOUD=https://souncloud.com # - FIGMA=https://figma.com # - TELEGRAM=https://telegram.org/ # - TUMBLR=https://www.tumblr.com/ # - STEAM=https://steamcommunity.com/ # - VIMEO=https://vimeo.com/ # - WORDPRESS=https://wordpress.com/ # - GOODREADS=https://www.goodreads.com/ # - SKOOB=https://www.skoob.com.br/ - FOOTER=Thanks for stopping by! ports: - 8080:3000 restart: unless-stopped security_opt: - no-new-privileges:trueIf you’re running docker onlyDocker commanddocker run -d \\ --name=littlelink-server \\ -p 8080:3000 \\ -e META_TITLE=&#39;Techno Tim&#39; \\ -e META_DESCRIPTION=&#39;Techno Tim Link page&#39; \\ -e META_AUTHOR=&#39;Techno Tim&#39; \\ -e THEME=&#39;Dark&#39; \\ -e FAVICON_URL=&#39;https://pbs.twimg.com/profile_images/1286144221217316864/qIAsKOpB_200x200.jpg&#39; \\ -e AVATAR_URL=&#39;https://pbs.twimg.com/profile_images/1286144221217316864/qIAsKOpB_200x200.jpg&#39; \\ -e AVATAR_2X_URL=&#39;https://pbs.twimg.com/profile_images/1286144221217316864/qIAsKOpB_400x400.jpg&#39; \\ -e AVATAR_ALT=&#39;Techno Tim Profile Pic&#39; \\ -e NAME=&#39;TechnoTim&#39; \\ -e BIO=&#39;Hey! Just a place where you can connect with me!&#39; \\ -e GITHUB=&#39;https://github.com/timothystewart6&#39; \\ -e TWITTER=&#39;https://twitter.com/TechnoTimLive&#39; \\ -e INSTAGRAM=&#39;https://www.instagram.com/techno.tim&#39; \\ -e YOUTUBE=&#39;https://www.youtube.com/channel/UCOk-gHyjcWZNj3Br4oxwh0A&#39; \\ -e TWITCH=&#39;https://www.twitch.tv/technotim&#39; \\ -e DISCORD=&#39;https://discord.gg/DJKexrJ&#39; \\ -e TIKTOK=&#39;https://www.tiktok.com/@technotim&#39; \\ -e KIT=&#39;https://kit.co/TechnoTim&#39; \\ --restart unless-stopped \\ ghcr.io/techno-tim/littlelink-server:latestIf you’re using Rancher, Portainer, Open Media Vault, Unraid, or anything else with a GUI, just copy and paste the environment variables above into the form on the web page." }, { "title": "All the Secrets to Creating My Tech YouTube Channel", "url": "/posts/how-i-create-my-content/", "categories": "vlog", "tags": "homelab, office, youtube, content-creation, adobe, hardware", "date": "2021-07-31 15:00:00 -0500", "snippet": "People have asked how I’ve been able to create and grow a Tech YouTube channel and what my process is when planning, filming, editing, and producing content. Today we talk about just that. All my secrets unveiled as we celebrate 50,000 subscribers in this behind the scenes look. Thank you so much!Watch Video(see video description for gear links)" }, { "title": "Before you upgrade to Proxmox 7, please consider this...", "url": "/posts/proxmox-7/", "categories": "proxmox", "tags": "homelab, proxmox", "date": "2021-07-10 14:00:00 -0500", "snippet": "As you may know, proxmox is my current choice for a hypervisor. Proxmox 7 is here and comes with a host of new features! In this video we’re cover all of the new features in Proxmox 7 as well as how to upgrade your Proxmox server safely. We’ll also cover all of the “scary” prompts you get while upgrading as well as some of the ways to make sure your upgrade is successful. So, if you’re thinking about upgrading your HomeLab to Proxmox 7, be sure to check this video out first.Watch VideoCommandsCheck your upgrade statuspve6to7 --fullFirst, make sure we have the latest packagesapt updateapt dist-upgradeUpdate all Debian repositories to Bullseyesed -i &#39;s/buster\\/updates/bullseye-security/g;s/buster/bullseye/g&#39; /etc/apt/sources.listWe’ll also need to make sure we comment out any Proxmox ve 6.0 repositories.nano /etc/apt/sources.listnano /etc/apt/sources.list.d/pve-enterprise.listAdd Proxmox VE &amp;amp; package Repoecho &quot;deb https://enterprise.proxmox.com/debian/pve bullseye pve-enterprise&quot; &amp;gt; /etc/apt/sources.list.d/pve-enterprise.listIf you’re using the non-subscription repository (like me) also runsed -i -e &#39;s/buster/bullseye/g&#39; /etc/apt/sources.list.d/pve-install-repo.list If you’re running Ceph, you’ll need to runecho &quot;deb http://download.proxmox.com/debian/ceph-octopus bullseye main&quot; &amp;gt; /etc/apt/sources.list.d/ceph.listDo the upgradeapt updateapt dist-upgradenetwork changesIf you’re running LACP / LAGG I found that you need to make some additional changes to your network config. See the comments in the config/etc/network/interfacesauto loiface lo inet loopback#auto eno1 &amp;lt;--- I had to comment this outiface eno1 inet manual#auto eno2 &amp;lt;--- I had to comment this outiface eno2 inet manualauto bond0iface bond0 inet manual bond-slaves eno1 eno2 bond-miimon 100 bond-mode 802.3ad bond-xmit-hash-policy layer2+3auto vmbr0iface vmbr0 inet static address 192.168.0.11/24 gateway 192.168.0.1 bridge-ports bond0 bridge-stp off bridge-fd 0 bridge-vlan-aware yes bridge-vids 2-4094" }, { "title": "Linux desktop, inside of a container, inside of a browser??? Yes. A Webtop.", "url": "/posts/webtop-container/", "categories": "self-hosted", "tags": "homelab, traefik, portainer, docker, self-hosted, ubuntu, webtop", "date": "2021-06-20 09:00:00 -0500", "snippet": "Have you ever thought about running a Linux desktop inside of a container? Me neither until I found this awesome project from LinuxServer called Webtops. A webtop is a technology stack that allows you to run Ubuntu or Alpine Linux within a container that is fully accessible from a browser. This allows you to use most Linux features with a container with a fraction of the cost of resources. Join me as we configure one from beginning to end.Watch VideoDocker SetupSee this post on how to install docker and docker-composeWebtopdocker-compose.yml and .env can be found hereFiles and foldersmkdir webtopcd webtopmkdir configcd ..nano docker-compose.ymlCreate Webtop containerdocker-compose up -d" }, { "title": "2 Factor Auth and Single Sign on with Authelia", "url": "/posts/authelia-traefik/", "categories": "traefik", "tags": "authelia, homelab, traefik, portainer, ssl, docker, self-hosted", "date": "2021-06-05 09:00:00 -0500", "snippet": "Authelia is an open source Single Sign On and 2FA companion for reverse proxies. It helps you secure your endpoints with single factor and 2 factor auth. It works with Nginx, Traefik, and HA proxy. Today, we’ll configure Authelia with Portainer and Traefik and have 2 Factor up and running with brute force protection!Watch VideoTraefikAuthelia will work with other reverse proxies but I used Traefik. If you want to configure Traefik as your reverse proxy see this guide.Docker SetupSee this post on how to install docker and docker-composeAutheliaconfiguration.yml, users_database.yml, and docker-compose.yml can be found hereExample heimdall can be found here hereTraefik configuration changes can be found hereGeneration a hashed password$ docker run authelia/authelia:latest authelia hash-password &#39;yourpassword&#39;Password hash: $argon2id$v=19$m=65536$3oc26byQuSkQqksq$zM1QiTvVPrMfV6BVLs2t4gM+af5IN7euO0VB6+Q8ZFsFiles and foldersmkdir autheliacd autheliamkdir configcd confignano configuration.ymlnano users_database.ymlcd ..nano docker-compose.ymlCreate Authelia containerdocker-compose up -d" }, { "title": "Is adding 3 MILLION domains to your Pi-Hole Block List a good thing?", "url": "/posts/pi-hole-blocklists/", "categories": "homelab", "tags": "homelab, pi-hole, dns, self-hosted", "date": "2021-05-08 09:00:00 -0500", "snippet": "In some of my previous Pi-Hole videos many of you spotted my blocklist with over a millions sites added and you wondered how you can do the same. Well, today I show you how to block more ads, block more tracking, block more malware, and block more telemetry with these community lists. Bonus (and spoiler alert) I show you how to add 3.5 million!Thanks to Firebog for the great lists firebog.netWatch Video" }, { "title": "Put Wildcard Certificates and SSL on EVERYTHING", "url": "/posts/traefik-portainer-ssl/", "categories": "traefik", "tags": "homelab, pi-hole, dns, traefik, portainer, ssl, self-hosted, docker", "date": "2021-04-24 09:00:00 -0500", "snippet": "Today, we’re going to use SSL for everything. No more self-sign certs. No more http. No more hosting things on odd ports. We’re going all in with SSL for our internal services and our external services too. We going to set up a reverse proxy using Traefik, Portainer, and use that to get wildcard certificates from Let’s Encrypt. Join me and let’s secure all the things.Watch VideoDocker SetupSee this post on how to install docker and docker-composeTraefikmkdir traefikcd traefikmkdir datacd datatouch acme.jsonchmod 600 acme.jsontouch traefik.ymltraefik.config can be found herecreate docker networkdocker network create proxytouch docker-compose.ymldocker-compose.yml can be found herecd datatouch config.ymldocker-compose up -dPortainermkdir portainercd portainertouch docker-compose.ymlmkdir datadocker-compose.yml can be found hereGenerate Basic Auth Passwordsudo apt updatesudo apt install apache2-utilsecho $(htpasswd -nb &amp;lt;USER&amp;gt; &amp;lt;PASSWORD&amp;gt;) | sed -e s/\\\\$/\\\\$\\\\$/gNOTE: Replace &amp;lt;USER&amp;gt; with your username and &amp;lt;PASSWORD&amp;gt; with your password to be hashed.Paste the output in your docker-compose.yml in line (traefik.http.middlewares.traefik-auth.basicauth.users=&amp;lt;USER&amp;gt;:&amp;lt;HASHED-PASSWORD&amp;gt;)Spin up the containerdocker-compose up -dTraefik Routes Configcd traefik/datanano config.ymlconfig.yml heredocker-compose up -d --force-recreate" }, { "title": "Using Pi-Hole for Local DNS - Fast, Simple, and Easy Guide", "url": "/posts/pi-hole-dns/", "categories": "homelab", "tags": "homelab, pi-hole, dns, self-hosted", "date": "2021-04-17 09:00:00 -0500", "snippet": "Pi-Hole is a wonderful ad blocking DNS sever for your network, but did you know you can also use it for a Local DNS server? In this fast, simple, and easy guide we’ll walk through how to create DNS Entries (A Records) for the clients on your network and also set up Aliases (pointers to A Records) so that you can start using DNS at home instead of relying on IP addresses.Watch Videocommandsnslookup juno.home.lan # lookup by host namehost 192.168.0.100 # reverse lookup" }, { "title": "Monitoring Your Kubernetes Cluster with Grafana, Prometheus, and Alertmanager", "url": "/posts/rancher-monitoring/", "categories": "kubernetes, rancher", "tags": "k3s, rancher, kubernetes, grafana, prometheus, homelab", "date": "2021-04-10 09:00:00 -0500", "snippet": "Today in this step by step guide, we’ll set up Grafana, Prometheus, and Alertmanager to monitor your Kubernetes cluster. This can be set up really quickly using helm or the Rancher UI. We’ll install and configure, set up some dashboards, and even set up some alerts using Slack. All this and more in this simple to follow, easy tutorial. Setting up Grafana and Prometheus has never been so easy.Watch Video" }, { "title": "Configuring Traefik 2 Ingress for Kubernetes", "url": "/posts/k3s-traefik-rancher/", "categories": "kubernetes, rancher", "tags": "homelab, rancher, kubernetes, k3s, traefik", "date": "2021-04-08 09:00:00 -0500", "snippet": "AboutNo video currently exists for this (yet)This guide is for installing traefik 2 on k3s. If you’re not using rancher, that’s fine, just skip to Reconfiguring k3sIt assumes you have followed: HIGH AVAILABILITY k3s (Kubernetes) in minutes! High Availability Rancher on a Kubernetes Cluster There is a little bit of “undoing” we’ll have to do since k3s ships with traefik and Rancher doesn’t play well with service load balancer. So, we’ll pick up after instaling these two.Reconfigure RancherMake note of your version of RancherRemove Rancherhelm uninstall rancherInstall Rancher(replace with version above)helm install rancher rancher-stable/rancher \\ --namespace cattle-system \\ --set hostname=rancher.example.com \\ --version 2.5.6Reconfiguring k3sGet the version of k3s that’s currently runningk3s --versionexport INSTALL_K3S_VERSION=v1.20.5+k3s1Run the same command you ran initially to install k3s on your servers but add --disable traefik --disable servicelb and be sure to set your version.example (be sure you are using the right version)export INSTALL_K3S_VERSION=v1.20.5+k3s1curl -sfL https://get.k3s.io | sh -s - server --node-taint CriticalAddonsOnly=true:NoExecute --tls-san your.load.balancer.ip --write-kubeconfig-mode 644 --disable traefik --disable servicelbThis should reconfigure your servers. Just run it on all server nodes, not agent nodes.Install Metal LBMetal LB installationYou can follow Self-Hosting Your Homelab Services with SSL to get the idea of Metal LB. It’s recommended to: Install with helm Use Layer2 configuration if you follow this seriesExposing Rancher directly to your Metal LBIt’s a good idea to do this until traefik is configured otherwise you won’t have access to the Rancher UIkubectl expose deployment rancher -n cattle-system --type=LoadBalancer --name=rancher-lb --port=443Then, you can access Rancher UI after getting external-IPkubectl get service/rancher-lb -n cattle-systemInstall Traefik 2You can can choose between creating Ingress in Rancher or IngresRoute with traefikIf you choose IngressRoute see IngressRoute otherwise continue on. You must have a persistent volume set up already for acme.json certificate This uses cloudflare, check providers if you want to switch This will get wildcard certs This is pointed at staging, if you want production be sure comment staging the line (and delete your staging certs)We will be installing this into the kube-system namespace, which already exists. If you are going to use anther namespace you will need change it everywhere.(Opional) Make sure that persistent volume claim is availableThe dynamic configuration for Traefik is stored in a persistent volume. If you want to persist the certificate, it’s better to create one now to claim later.To create a persistent volume, it’s better to check out Cloud Native Distributed Storage in Kubernetes with Longhorn.If not, just create one from Rancher UI &amp;gt; Clusters (Choose your cluster) &amp;gt; Storage &amp;gt; Persistent Volume &amp;gt; Add volumeAdd traefik helm repo and updatehelm repo add traefik https://helm.traefik.io/traefikhelm repo updateEdit &amp;amp; apply ConfigMap Create traefik-config.yaml with the contents of /config/traefik-config.yaml from /config This holds our cloudflare secrets along with a configmap Update this file with your values Re-check if you have a persistent volume ready to claim Apply the configkubectl apply -f traefik-config.yamlEdit &amp;amp; install Traefik helm chart Create traefik-chart-values.yaml with the contents of /config/traefik-chart-values.yaml from /config Update loadBalancerIP in traefik-chart-values.yaml with your Metal LB IPBefore running this, be sure you only have one default storage class set.If you are using Rancher it is Cluster &amp;gt; Storage &amp;gt; Storage Classes. Make sure only one is default. Install Traefik with chart valueshelm install traefik traefik/traefik --namespace=kube-system --values=traefik-chart-values.yamlMore configuration value can be add from this default-value.yaml from Traefik github.If all went well, you should now have traefik 2 installed and configured.Check for container logsTo check if the Traefik instance is running correctly, see the logs:kubectl -n kube-system logs $(kubectl -n kube-system get pods --selector &quot;app.kubernetes.io/name=traefik&quot; --output=name)It should be level=info msg=&quot;Configuration loaded from flags.&quot;Traefik DashboardTo see all router to Traefik, we can install and expose Traefik Dashboard.First you will need htpassword to generate a password for your dashboard.sudo apt-get updatesudo apt-get install apache2-utilsYou can then generate one using this, be sure to swap your username and password.htpasswd -nb techno password | openssl base64It should output:dGVjaG5vOiRhcHIxJFRnVVJ0N2E1JFpoTFFGeDRLMk8uYVNaVWNueG41eTAKCg==Save this in a secure place, it will be the password you use to access the traefik dashboard.Copy traefik-dashboard-secret.yaml locally and update it with your credentials.Copy traefik-dashboard-ingressroute.yaml and update it with your hostname, then apply:kubectl apply -f traefik-dashboard-secret.yamlkubectl apply -f traefik-dashboard-ingressroute.yamlThis should create: A secret in Kubernetes cluster name traefik-dashboard-auth A middleware for Traefik name traefik-dashboard-basicauth An ingress route for Traefik name dashboardCheck out the Traefik Dashboard with the URL you specify earlier.Exposing a service with traefik and Rancher IngressIn Rancher go to Load Balancing create ingress choose a host name (service.example.com) choose a target (your workload) set the port to the exposed port within the container go to labels and annotations and add kubernetes.io/ingress.class = traefik-external note, traefik-external comes from --providers.kubernetesingress.ingressclass=traefik-external in traefik-chart-values.yml. If you used something else, you will need to set your label properly. when you visit your website (https://service.example.com) you should now see a certificate issues. If it’s a staging cert, see the note about switching to production in traefik-chart-values.yaml. After changing, you will need to delete your certs in storage and reapply that filekubectl delete -n kube-system persistentvolumeclaims acme-json-certskubectl apply -f traefik-config.yamlExposing a service with traefik IngressRoutecopy the contents of config-ingress-route/kubernetes to your local machinethen runkubectl apply -f kubernetesThis will create the deployment, service, and ingress." }, { "title": "Everything you need to know about the NEW Rancher UI", "url": "/posts/rancher-new-ui/", "categories": "kubernetes, rancher", "tags": "k3s, rancher, kubernetes, homelab", "date": "2021-04-03 09:00:00 -0500", "snippet": "Today we’re going to talk about the new Cluster Explorer in Rancher. The Cluster Explorer is the new fancy user interface that will replace the old Cluster Manager. The new UI contains lots of new areas to explore, from new dashboards to new workload and deployment views, to service discovery, to storage to RBAC, and more. If you’ve been hesitant to use the new UI, no need to worry, we all have. But hopefully after this you’ll switch over like I have done too!Watch Video" }, { "title": "Multi-CPU Architecture Kubernetes Cluster with a Raspberry Pi", "url": "/posts/multi-arch-k3s-rpi/", "categories": "kubernetes, k3s", "tags": "raspberry-pi, k3s, kubernetes, homelab, hardware", "date": "2021-03-14 09:00:00 -0500", "snippet": "Watch VideoBuilding a Multi-architecture CPU Kubernetes cluster is easier than you think with k3s. In this video we’ll build a Raspberry Pi 4 with an ARM CPU and add it to our existing x86 x64 amd64 CPU Kubernetes cluster. Our foundation will be Ubuntu for ARM, then we’ll add k3s, and then join it to our cluster. We’ll also discuss how this works with Docker images built for specific CPU types. We’ll also talk about some build configurations and requirements for your Pi.Happy Pi Day!k3s --versionget k3s token from a serversudo cat /var/lib/rancher/k3s/server/node-tokenset k3s version (the value you got from k3s --version) export INSTALL_K3S_VERSION=v1.20.5+k3s1install k3s as an agent using your token from abovecurl -sfL https://get.k3s.io | K3S_URL=https://example.local.com:6443 K3S_TOKEN=hksadhahdklahkadjhasjdhasdhasjk::server:asljkdklasjdaskdljaskjdlasj sh -check all k3s nodes from your workstationkubectl get nodesget all pods running on a specific node (elio)kubectl get pods --all-namespaces -o wide --field-selector spec.nodeName=elioset a label on a node (elio)kubectl label nodes elio cputype=armdescribe a node (elio)kubectl describe node elioExample pod specnginx-pod.ymlapiVersion: v1kind: Podmetadata: name: nginxspec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent nodeSelector: cputype: arm64" }, { "title": "Rancher vs. Portainer - Which one should I choose?", "url": "/posts/rancher-vs-portainer/", "categories": "homelab", "tags": "homelab, rancher, portainer", "date": "2021-03-08 08:00:00 -0600", "snippet": "Rancher vs. Portainer, which one is better” Which one should I choose? Can Portainer manager Kubernetes? Can Rancher manage Kubernetes? We answer all these questions and more in this quick, no fluff video. Side note, this is one of the most asked questions in my live streams.Please share this with anyone who asks what a Home Lab is.Watch Video" }, { "title": "Windows Terminal and WSL Config Fast, Simple, and Easy Guide", "url": "/posts/windows-terminal-wsl/", "categories": "homelab", "tags": "homelab, wsl, terminal, zsh, windows, linux", "date": "2021-02-23 08:00:00 -0600", "snippet": "Lots of people ask which terminal I use on Windows and how I configure it. It’s pretty simple, I use the Microsoft Windows Terminal and it’s a fantastic terminal on Windows. It is free and open source. With Windows Terminal, you can install and configure different environments for Windows and Linux. You can choose between Ubuntu or any other WSL 1 or WSL 2 (Windows Subsystem for Linux) environment along with the typical PowerShell and cmd. In this fast, simple, and easy tutorial we’ll set up the Windows Terminal, install WSL, then install Ubuntu, and configure Ubuntu with ZSH (zshell) and oh my zsh (0h-my-zsh). Then, you’ll know exactly how I configure my Terminal on Windows. Bonus Now all your copy pasta commands will work on Windows, macOS, and Linux!Watch Video" }, { "title": "How to Update Portainer Fast, Simple, and Easy Guide", "url": "/posts/portainer-update/", "categories": "portainer", "tags": "portainer, kubernetes, homelab, docker", "date": "2021-02-19 08:00:00 -0600", "snippet": "Updating Portainer is easy, if you know how. In this quick no fluff video, I will show you how to update any version of Portainer. This guide can be used for installing it too. Portainer is a container management system for Docker, Kubernetes, Swarm, and Azure ACI. Portainer is free and open source.Watch Video" }, { "title": "Containerizing HandBrake with Docker and Kubernetes", "url": "/posts/handbrake-docker-k8s/", "categories": "self-hosted", "tags": "rancher, kubernetes, handbrake, docker, homelab, self-hosted", "date": "2021-02-16 08:00:00 -0600", "snippet": "Handbrake is a fantastic open source transcoder. It allows you to transcode, or convert, your video files into different formats. It has a nice UI that’s easy to use and helps you transcode videos very easily. It supports profiles that are optimized for your target devices. And because this is open source and cross compiled, you can run this on Windows, macOS, or Linux… but did you also know you can self host a containerized version of this with Docker and Kubernetes?Watch Video" }, { "title": "How to Create a Multiboot USB with Ventoy Fast, Simple, and Easy Guide", "url": "/posts/ventoy-tutorial/", "categories": "homelab", "tags": "windows, linux, homelab, ubuntu, ventoy, hardware", "date": "2021-02-12 08:00:00 -0600", "snippet": "In this quick no fluff video, I will show you how to create a multi-bootable USB drive with Ventoy that can boot all of your ISO, WIM, IMG, VHD, and EFI files. It supports both MBR and GPT partitions. This is the last USB drive you will ever need and you won’t ever need to format another one. Ventoy is free and open source.Watch Video" }, { "title": "The Best Way to Dual Boot Windows and Ubuntu", "url": "/posts/dual-boot-windows-ubuntu/", "categories": "homelab", "tags": "windows, linux, homelab, ubuntu", "date": "2021-02-08 08:00:00 -0600", "snippet": "Dual booting Windows and Ubuntu Linux can be a pain however there are many benefits do doing this if you do it right. In this tutorial we’ll discuss how to dual boot Windows and Ubuntu on your PC or laptop in a few simple steps so that you can take advantage of all the hardware in your “best” machine with full access to your GPU.Watch Video" }, { "title": "I ran MY LIFE through a DEEP LEARNING algorithm and here&#39;s what came out...", "url": "/posts/deep-learning-my-life/", "categories": "homelab", "tags": "windows, linux, homelab, machine-learning, deep-learning, ai, nvidia, hardware, life", "date": "2021-02-01 08:00:00 -0600", "snippet": "My life, ran against a neural network and detected by Deep Learning. If you’d like to see how this video was generated using ML and Deep Learning, check out the video here:How this video was generatedWatch Video" }, { "title": "RTX 3090 for Machine Learning?", "url": "/posts/3090-machine-learning/", "categories": "homelab", "tags": "windows, linux, homelab, machine-learning, deep-learning, ai, nvidia, hardware", "date": "2021-01-30 08:00:00 -0600", "snippet": "The NVIDIA RTX 3090 is a beast. We all know it can beat the benchmarks in gaming, but how about machine learning and neural networks? Today we walk through the RTX 3090 and then compile and run Darknet, an open source neural network, on Windows and then Ubuntu Linux and run object detection on pictures, images, and real-time video. You will be amazed at how much more you can get out of your video card than just gaming!Watch Video" }, { "title": "My HUGE Home Security Upgrade", "url": "/posts/home-security-upgrade/", "categories": "homelab", "tags": "homelab, unifi, protect, home-security, hardware", "date": "2021-01-16 08:00:00 -0600", "snippet": "I am a huge fan of self hosted home security and I’ve been doing it for years. I love the idea of being able to check on my home when I am away. Also, I’ve always kept my video footage on premise (on prem) and never sent it to the cloud. It started way back with a laptop and a webcam and it evolved into self-hosting my own DVR software on a virtual machine with many PoE and wireless cameras… but this became way too much to manage. Well, this is the next evolution of my home security, integrating it into my recently upgraded UniFi network. I wanted to simplify my home security, just like my network, so I decided to pick up some UniFi Protect G3 FLEX cameras and some new UniFi Protect G3 Instant cameras to help secure my home. I also picked up the UniFi Smart Power Plug that will monitor my internet connection and reboot my modem if I lose connection. This is going to be awesome! I hope you enjoy this complete guide to setting up your new UniFi Protect system! Note, everything here was purchased with my own money. 0 outside influence by brands.Watch Video" }, { "title": "Self-host your own internet speed test with LibreSpeed!", "url": "/posts/librespeed/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, librespeed, self-hosted", "date": "2021-01-09 08:00:00 -0600", "snippet": "Internet speed tests are full of junk, ads, tracking, and some even contain deprecated plug-ins. Who needs this when we can self-host an open source one? LibreSpeed is a lightweight speedtest implemented in JavaScript using XHR requests and web workers. It’s fast, feature rich, and supports every modern browser. Say goodbye to those other speed tests and host your own containerized in Docker or Kubernetes today!Watch Video" }, { "title": "Cloud Native Distributed Storage in Kubernetes with Longhorn", "url": "/posts/longhorn-install/", "categories": "kubernetes, rancher", "tags": "homelab, rancher, kubernetes, longhorn, k3s", "date": "2021-01-02 08:00:00 -0600", "snippet": "Storage in Kubernetes is hard, complicated, and messy. Configuring volumes, mounts, and persistent volumes claims and getting it right can be a challenge. It’s also challenging to manage that storage and replicate it across all your Kubernetes clusters. It’s also been very challenging to do this on bare metal, outside of a cloud provider. That’s where Longhorn comes. Longhorn is an open source, a CNCF distributed block storage system for Kubernetes. It comes with a UI, backups, snapshots, cluster disaster recovery, and it does all this with or without Rancher. Rancher is NOT a requirement.Watch VideoinstallRancher app catalogSee the app catalog within Rancheradditional dependenciesThere are some additional dependencies you might want to install prior to configuringsudo apt updatesudo apt install nfs-common open-iscsikubectlkubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/master/deploy/longhorn.yamlkubectl get pods \\--namespace longhorn-system \\--watchSee more at https://longhorn.io/docs/1.0.0/deploy/install/install-with-kubectlhelmhelm3kubectl create namespace longhorn-systemhelm install longhorn ./longhorn/chart/ --namespace longhorn-systemkubectl -n longhorn-system get podtaintsI ended up tainting my storage nodes using this commandkubectl taint nodes luna-01 luna-02 luna-03 luna-04 CriticalAddonsOnly=true:NoExecutekubectl taint nodes luna-01 luna-02 luna-03 luna-04 StorageOnly=true:NoExecuteThen applying that toleration to Lonhorn in settingsStorageOnly=true:NoExecute;CriticalAddonsOnly=true:NoExecuteThis ensures that the storage nodes won’t take on any general workloads and still allow Lonhorn to use these as storage." }, { "title": "Automate EVERYTHING with Ansible!", "url": "/posts/ansible-automation/", "categories": "homelab", "tags": "homelab, ansible", "date": "2020-12-26 08:00:00 -0600", "snippet": "Ansible. Need I say more? Well, maybe, if you’ve never heard of it. Ansible is a simple IT automation that anyone can use. You can Automate anything with an SSH conneWatch VideoYou can also find a collection of playbooks hereinstallsudo apt updatesudo apt install ansiblesudo apt install sshpasshosts[ubuntu]server-01server-02192.168.0.100192.168.0.1002commandscommand with moduleansible -i ./inventory/hosts ubuntu -m ping --user someuser --ask-passcommand with playbookansible-playbook ./playbooks/apt.yml --user someuser --ask-pass --ask-become-pass -i ./inventory/hostsplaybooksapt.yml- hosts: &quot;*&quot; become: yes tasks: - name: apt apt: update_cache: yes upgrade: &#39;yes&#39;qemu-guest-agent.yml- name: install latest qemu-guest-agent hosts: &quot;*&quot; tasks: - name: install qemu-guest-agent apt: name: qemu-guest-agent state: present update_cache: true become: truezsh.yml- name: install latest zsh on all hosts hosts: &quot;*&quot; tasks: - name: install zsh apt: name: zsh state: present update_cache: true become: truetimezone.yml- name: Set timezone and configure timesyncd hosts: &quot;*&quot; become: yes tasks: - name: set timezone shell: timedatectl set-timezone America/Chicago - name: Make sure timesyncd is stopped systemd: name: systemd-timesyncd.service state: stopped - name: Copy over the timesyncd config template: src=../templates/timesyncd.conf dest=/etc/systemd/timesyncd.conf - name: Make sure timesyncd is started systemd: name: systemd-timesyncd.service state: startedtimezonsync.conf# This file is part of systemd.## systemd is free software; you can redistribute it and/or modify it# under the terms of the GNU Lesser General Public License as published by# the Free Software Foundation; either version 2.1 of the License, or# (at your option) any later version.## Entries in this file show the compile time defaults.# You can change settings by editing this file.# Defaults can be restored by simply deleting this file.## See timesyncd.conf(5) for details.[Time]NTP=192.168.0.4FallbackNTP=time.cloudflare.com#RootDistanceMaxSec=5#PollIntervalMinSec=32#PollIntervalMaxSec=2048" }, { "title": "HIGH AVAILABILITY k3s (Kubernetes) in minutes!", "url": "/posts/k3s-ha-install/", "categories": "kubernetes, k3s", "tags": "homelab, rancher, kubernetes, k3s, mysql, nginx", "date": "2020-12-19 08:00:00 -0600", "snippet": "Are you running Kubernetes in your homelab or in the enterprise? Do you want an easy way to manage and create Kubernetes clusters? Do you want high availability Rancher? Join me as we walk through stalling Rancher on an existing high availability k3s cluster in this step-by-step tutorial. We install Rancher, configure a load balancer, install and configure helm, install cert-manager, configure Rancher, walk through the GUI, scale up our cluster, and set up a health check and liveness check! Join me, it’s easy in this straightforward guide.Watch VideoLoad BalancerCreate a load balancer using nginxnginx.conf#uncomment this next line if you are NOT running nginx in docker#load_module /usr/lib/nginx/modules/ngx_stream_module.so;events {}stream { upstream k3s_servers { server 192.168.60.20:6443; server 192.168.60.21:6443; } server { listen 6443; proxy_pass k3s_servers; }}k3s serversOn your k3s serversexport K3S_DATASTORE_ENDPOINT=&#39;mysql://username:password@tcp(database_ip_or_hostname:port)/database&#39;Note: It’s advised you consult the Rancher Support Matrixto get the recommended version for all Rancher dependencies.thencurl -sfL https://get.k3s.io | sh -s - server --node-taint CriticalAddonsOnly=true:NoExecute --tls-san load_balancer_ip_or_hostnametest withsudo k3s kubectl get nodesto add additional servers, get token from first serversudo cat /var/lib/rancher/k3s/server/node-tokenthen run the same command but add the token (replace SECRET with token from previous command)curl -sfL https://get.k3s.io | sh -s - server --token=SECRET --node-taint CriticalAddonsOnly=true:NoExecute --tls-san load_balancer_ip_or_hostnameon agents / workersto run without sudosudo chmod 644 /etc/rancher/k3s/k3s.yaml` on the serversget tokensudo cat /var/lib/rancher/k3s/server/node-tokenk3s agents / workerscurl -sfL https://get.k3s.io | K3S_URL=https://load_balancer_ip_or_hostname:6443 K3S_TOKEN=mynodetoken sh -otherTo install kubectl see this linkkubeconfig location on server/etc/rancher/k3s/k3s.yamlsudo cat /etc/rancher/k3s/k3s.yamlcopy contents to your dev machine~/.kube/configBe sure to update the server: to your load balancer ip or hostnamekubernetes dashboardcheck releases for the command to use. At time or filming it’s:kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yamlDashboard RBAC Configurationdashboard.admin-user.ymlapiVersion: v1kind: ServiceAccountmetadata: name: admin-user namespace: kubernetes-dashboarddashboard.admin-user-role.ymlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: name: admin-userroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects:- kind: ServiceAccount name: admin-user namespace: kubernetes-dashboardDeploy the admin-user configuration:(if you’re doing this from your dev machine, remove sudo k3s and just use kubectl)sudo k3s kubectl create -f dashboard.admin-user.yml -f dashboard.admin-user-role.ymlget bearer tokensudo k3s kubectl -n kubernetes-dashboard describe secret admin-user-token | grep ^tokenstart dashboard locallysudo k3s kubectl proxyThen you can sign in at this URL using your token we got in the previous step:http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/here’s testdeploy.yml you can useapiVersion: apps/v1kind: Deploymentmetadata: name: mysite labels: app: mysitespec: replicas: 1 selector: matchLabels: app: mysite template: metadata: labels: app : mysite spec: containers: - name : mysite image: nginx ports: - containerPort: 80" }, { "title": "High Availability Rancher on kubernetes", "url": "/posts/rancher-ha-install/", "categories": "kubernetes, rancher", "tags": "homelab, rancher, kubernetes, k3s", "date": "2020-12-19 08:00:00 -0600", "snippet": "Are you running Kubernetes in your homelab or in the enterprise?Do you want an easy way to manage and create Kubernetes clusters?Join me as we walk through installing Rancher on an existing high availability k3s cluster in this step-by-step tutorial.We install Rancher, configure a load balancer, install and configure helm, install cert-manager, configure Rancher, walk through the GUI, scale up our cluster, and set up a health check and liveness check! Join me, it’s easy in this straightforward guide.Watch VideoinstallNote:It’s advised you consult the Rancher Support Matrixto get the recommended version for all Rancher dependencies.https://rancher.com/docs/rancher/v2.x/en/installation/install-rancher-on-k8s/#1-install-the-required-cli-toolskubectlinstall helmcurl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bashadd helm repo, stablehelm repo add rancher-stable https://releases.rancher.com/server-charts/stablecreate rancher namespacekubectl create namespace cattle-systemssl configurationuser rancher generated (default)install cert-managerkubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.2.0/cert-manager.crds.yamlcreate name-space for cert-managerkubectl create namespace cert-managerAdd the Jetstack Helm repository helm repo add jetstack https://charts.jetstack.ioupdate helm repohelm repo updateinstall cert-manager helm chart*Note: If you receive an “Error: Kubernetes cluster unreachable” message when installing cert-manager, try copyingthe contents of “/etc/rancher/k3s/k3s.yaml” to “~/.kube/config” to resolve the issue.*helm install \\ cert-manager jetstack/cert-manager \\ --namespace cert-manager \\ --version v1.2.0check rollout of cert-managerkubectl get pods --namespace cert-managerBe sure each pod is fully running before proceedingInstall Rancher with HelmNote:If you have “.local” for your private TLD then Rancher will NOT finish the setup within the webUIhelm install rancher rancher-stable/rancher \\ --namespace cattle-system \\ --set hostname=rancher.example.comcheck rolloutkubectl -n cattle-system rollout status deploy/rancheryou should seeWaiting for deployment &quot;rancher&quot; rollout to finish: 0 of 3 updated replicas are available...Waiting for deployment &quot;rancher&quot; rollout to finish: 1 of 3 updated replicas are available...Waiting for deployment &quot;rancher&quot; rollout to finish: 2 of 3 updated replicas are available...deployment &quot;rancher&quot; successfully rolled outcheck statuskubectl -n cattle-system rollout status deploy/rancheryou should seedeployment &quot;rancher&quot; successfully rolled outload balancerIf you are using k3s you can use the traefik ingress controller that ships with k3srunkubectl get svc --all-namespaces -o widelook forkube-system traefik LoadBalancer 10.43.202.72 192.168.100.10 80:32003/TCP,443:32532/TCP 5d23h app=traefik,release=traefikthen create a DNS entry for rancher.example.com 192.168.100.10This can be a host entry on your machine, or a DNS entry in your local DNS system (router, pi hole, etc…)otherwise you can use nginxnginx lbhttps://rancher.com/docs/rancher/v2.x/en/installation/resources/k8s-tutorials/infrastructure-tutorials/nginx/other considerationsSeparating Rancher Cluster from your User Clusterhttps://rancher.com/docs/rancher/v2.x/en/overview/architecture-recommendations/#separation-of-rancher-and-user-clusters" }, { "title": "High Availability Pi-Hole? Yes please!", "url": "/posts/ha-pi-hold-gravity-sync/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, portainer, self-hosted, pi-hole, gravity-sync, keepalived", "date": "2020-12-12 08:00:00 -0600", "snippet": "Dear Pi-Hole,We love your product. It keeps our network safe from malware and other unwanted domains. While we love what is there so far, please add a feature to your core product to keep multiple servers in sync and provide high availability DNS to our whole entire network. Then, we won’t have people asking us “Is the internet down?” every time we reboot our Pi-Hole server.Until then, we will use Gravity Sync.Sincerely,Techno Tim (and probably thousands of other lovers of Pi-Hole).P.S. Keep up the good work!Thank you Gravity Sync!(don’t forget to star the repo!)https://github.com/vmstan/gravity-syncGreat Raspberry Pi - Pi-Hole Servers!► Raspberry Pi Zero W Kit - https://amzn.to/3qOl9yS► Raspberry Pi 4 Kit - https://amzn.to/3nophDmWatch VideoIf you’re looking to have your PiHole instances failover automatically, be sure to check out the documentation on keepalivedMeet keepalived - High Availability and Load Balancing in One" }, { "title": "Before I do anything on Proxmox, I do this first...", "url": "/posts/first-11-things-proxmox/", "categories": "proxmox", "tags": "homelab, proxmox, homelab", "date": "2020-11-28 08:00:00 -0600", "snippet": "After setting up my Proxmox servers, there are a few thigns I do before I use them for their intended purpose. This ranges from updates, to storage, to networking and VLANS, to uploading ISOs, to clustering, and more. Join me as we pick up where the rest of the proxmox tutorials stop, and that’s everything you need to do to make these production ready (and maybe a bonus item too).Watch VideoUpdatesEdit /etc/apt/sources.listProxmox Version 6.Xdeb http://ftp.us.debian.org/debian buster main contribdeb http://ftp.us.debian.org/debian buster-updates main contrib# security updatesdeb http://security.debian.org buster/updates main contrib# not for production usedeb http://download.proxmox.com/debian buster pve-no-subscriptionProxmox Version 7.X(for a full guide on Proxmox 7, please see this link)deb http://ftp.debian.org/debian bullseye main contribdeb http://ftp.debian.org/debian bullseye-updates main contrib# security updatesdeb http://security.debian.org/debian-security bullseye-security main contrib# PVE pve-no-subscription repository provided by proxmox.com,# NOT recommended for production usedeb http://download.proxmox.com/debian/pve bullseye pve-no-subscriptionEdit /etc/apt/sources.list.d/pve-enterprise.list# deb https://enterprise.proxmox.com/debian/pve buster pve-enterpriseRunapt-get updateapt dist-upgraderebootStorageBE CAREFUL. This will wipe your disks.fdisk /dev/sdaThen P for partition, then D for delete, then W for write.Check SMART Monitoringsmartctl -a /dev/sdaIOMMU (PCI Passthrough)See Proxmox PCI Passthroughnano /etc/default/grubGRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on&quot;update-grubEdit /etc/modulesvfiovfio_iommu_type1vfio_pcivfio_virqfdupdate-initramfs -u -k allrebootVLAN AwareIf you want to restrict your VLANSnano /etc/network/interfacesSet your VLAN herebridge-vlan-aware yesbridge-vids 20NIC Team Examplenano /etc/network/interfacesauto eno1iface eno1 inet manualauto eno2iface eno2 inet manualauto bond0iface bond0 inet manual bond-slaves eno1 eno2 bond-miimon 100 bond-mode 802.3ad bond-xmit-hash-policy layer2+3auto vmbr0iface vmbr0 inet static address 192.168.0.11/24 gateway 192.168.0.1 bridge-ports bond0 bridge-stp off bridge-fd 0 bridge-vlan-aware yes bridge-vids 2-4094#lacp nic teamIf you’re running Proxmox 7, see the modified config here for LAGG / LACPCloningThese are the commands I run after cloning a Linux machine so that it resets all information for the machine it was cloned from.change hostnamesudo nano /etc/hostname find your hostname and change itchange hosts file find your hostname and change itsudo nano /etc/hostsreset machine IDrm -f /etc/machine-id /var/lib/dbus/machine-iddbus-uuidgen --ensure=/etc/machine-iddbus-uuidgen --ensureregenerate ssh keysregen ssh keyssudo rm /etc/ssh/ssh_host_*sudo dpkg-reconfigure openssh-serverreboot" }, { "title": "My HUGE (but small) 1U Server Upgrade", "url": "/posts/1u-server-upgrade/", "categories": "homelab", "tags": "homelab, hardware", "date": "2020-11-21 08:00:00 -0600", "snippet": "I’ve been making great use of some older, bigger servers but I decided to try and build, upgrade, and migrate to some 1U servers. Join me as we unbox and build my 2 new virtualization servers!Watch Video" }, { "title": "Meet WireGuard, the new hotness in VPN...", "url": "/posts/wiregaurd-setup/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, wireguard, self-hosted, vpn, portainer", "date": "2020-11-14 08:00:00 -0600", "snippet": "Self hosting a VPN has traditionally been hard to set up and we’ve had very few options. That is until WireGuard came about. WireGuard is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It also supports running inside of a Docker container and that’s exactly what we’ll be using in this tutorial!Watch Video" }, { "title": "I think I found a Dropbox replacement with Nextcloud...", "url": "/posts/nextcloud-setup/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, self-hosted, nextcloud, portainer", "date": "2020-11-07 08:00:00 -0600", "snippet": "Are you thinking about ditching Google apps or looking for a Dropbox replacement? Are you ready to self host your own productivity platform? Well, Nextcloud may be for you! In today’s tutorial we’ll walk though setting up Nextcloud with Docker and Kubernetes. We’ll also walk through some of the new features, installing apps from the app store, exposing this Nextcloud publicly, as well as setting up 2FA (2 factor authentication) with TOTP clients like Google Authenticator and Authy.Watch Video" }, { "title": "Before I do anything on Linux, I do these first...", "url": "/posts/fist-13-things-linux/", "categories": "homelab", "tags": "homelab, linux, ubuntu", "date": "2020-10-31 09:00:00 -0500", "snippet": "After setting up my Linux servers, there are a few things I do before I use them for their intended purpose. This ranges from security, to tools, to config. Join me as we set up our first Linux server in this tutorial and walk through setting it up proper (and maybe some bonus items sprinkled in).Watch VideoUpdatesudo apt-get updatesudo apt-get upgradeReconfigure unattended-upgradessudo dpkg-reconfigure --priority=low unattended-upgradesVerify unattended upgrades configuration file in your text editor of choice/etc/apt/apt.conf.d/20auto-upgradesTo disable automatic reboots by the automatic upgrades configuration edit the following file:/etc/apt/apt.conf.d/50unattended-upgradesand uncomment the following line by removing the leading slashes://Unattended-Upgrade::Automatic-Reboot &quot;false&quot;;Accountadd usersudo adduser someuseradd to sudoerssudo usermod -aG sudo someuserSSH Serverinstallsudo apt-get install openssh-servercopy key from client to serverssh-copy-id someuser@192.168.0.100switch to key based authsudo nano /etc/ssh/sshd_configAdd these attributesPasswordAuthentication noChallengeResponseAuthentication noNetworkingstatic IPsudo nano /etc/netplan/01-netcfg.yamlnetwork: version: 2 renderer: networkd ethernets: ens18: dhcp4: no addresses: - 192.168.0.222/24 gateway4: 192.168.0.1 nameservers: addresses: [192.168.0.4]Install oh-my-zshsudo apt-get updatesudo apt-get install zshsudo apt-get install powerline fonts-powerlinesh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;Fix LVMsudo lvmlvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lvexitsudo resize2fs /dev/ubuntu-vg/ubuntu-lvhostnamesudo hostnamectl set-hostnamesudo nano /etc/hostsTime ZoneCheck time zone:timedatectlChange time zone:sudo timedatectl set-timezoneYou can also use if you want a menu.sudo dpkg-reconfigure tzdata NTP Timesudo nano /etc/systemd/timesyncd.confNTP=192.168.0.4sudo timedatectl set-net offsudo timedatectl set-ntp oninstall kvm agentsudo apt-get install qemu-guest-agentfirewallsudo ufw default deny incomingsudo ufw allow sshsudo ufw enablefail2bansudo apt-get install fail2bansudo cp /etc/fail2ban/fail2ban.{conf,local}sudo cp /etc/fail2ban/jail.{conf,local}sudo nano /etc/fail2ban/jail.localbackend = systemdcheck statussudo fail2ban-client statussudo fail2ban-client status sshd" }, { "title": "Huge Network Upgrade for My Homelab", "url": "/posts/home-network-upgrade/", "categories": "homelab", "tags": "homelab, network, hardware, unifi", "date": "2020-10-24 09:00:00 -0500", "snippet": "I decided to give my Home Lab a proper upgrade for 2020 and in to 2021! I finally took the plunge and went all in with a UniFi UDM Pro and a UniFi Switch PRO 24 PoE switch and they are awesome!Watch Video" }, { "title": "Migrate Your Databases to Kubernetes and Docker", "url": "/posts/migrate-database-docker-kubernetes/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, self-hosted, mysql, database, portainer", "date": "2020-10-17 09:00:00 -0500", "snippet": "Have you been putting off migrating your database to Docker and Kubernetes like I have? Well wait no longer. It’s simple using this step-by-step tutorial. Today, we’ll move a database that’s on a virtual machine to a container that’s running in kubernetes. Oh yeah, this will also work if it’s a bare metal server too, duh. 🙂Watch Videomysql_backup.sh#! /bin/bashBACKUP_DIR=&quot;/home&quot;MYSQL_USER=&quot;root&quot;MYSQL=/usr/bin/mysqlMYSQL_PASSWORD=&quot;your my sql password&quot;MYSQLDUMP=/usr/bin/mysqldumpMYSQL_HOST=&quot;mysql&quot;MYSQL_PORT=&quot;3306&quot;databases=`$MYSQL --user=$MYSQL_USER --host $MYSQL_HOST --port $MYSQL_PORT -p$MYSQL_PASSWORD -e &quot;SHOW DATABASES;&quot; | grep -Ev &quot;(Database|information_schema|performance_schema)&quot;`for db in $databases; do $MYSQLDUMP --host $MYSQL_HOST --port $MYSQL_PORT --force --opt --user=$MYSQL_USER -p$MYSQL_PASSWORD --databases $db | gzip &amp;gt; &quot;$BACKUP_DIR/$db.gz&quot;done" }, { "title": "I Heard You Like GPUs in Servers... GPU Passthrough on Linux and Docker", "url": "/posts/gpu-passthrough-linux/", "categories": "homelab", "tags": "homelab, rancher, kubernetes, docker, portainer, nvidia, hardware", "date": "2020-10-10 09:00:00 -0500", "snippet": "Do you have a lot of virtual machines? Are you running Windows, Linux, and Mac and need remote access from a single UI? Well, Apache Guacamole is for you! Apache Guacamole is a clientless remote access gateway that give you a web portal to access any of your clients over standard protocols like VNC, RDP, SSH, TELNET, and more. Join me in this step by step tutorial as we set up a self-hosted version of Guacamole in your homelab. As an added bonus, we’ll set up 2FA (multifactor authentication) to help secure Guacamole. Oh, yeah, and we’ll do this all in Docker and or Kubernetes, it’s up to you! :)Watch Video88 88 88 &quot;&quot; 88 88,dPPYba, 88 8b,dPPYba, ,adPPYb,d8 ,adPPYba, 88P&#39; &quot;8a 88 88P&#39; `&quot;8a a8&quot; `Y88 a8&quot; &quot;8a 88 d8 88 88 88 8b 88 8b d8 88b, ,a8&quot; 88 88 88 &quot;8a, ,d88 &quot;8a, ,a8&quot; 8Y&quot;Ybbd8&quot;&#39; 88 88 88 `&quot;YbbdP&quot;Y8 `&quot;YbbdP&quot;&#39; aa, ,88 &quot;Y8bbdP&quot; If you need to passthrough a GPU, follow this guide but install Ubuntu instead.ProxmoxShut down your VM in proxmox, edit your conf file, it should be here (note, change path to your VM’s ID)/etc/pve/qemu-server/100.confadd cpu: host,hidden=1,flags=+pcid to that filestart the server.Linux Guestsudo apt-get updatesudo apt-get upgradesudo apt-get install qemu-guest-agent # this is optional if you are virtualizing this machinesudo apt-get install build-essential # build-essential is required for nvidia drivers to compilesudo apt install --no-install-recommends nvidia-cuda-toolkit nvidia-headless-450 nvidia-utils-450 libnvidia-encode-450Then reboot.Then install nvtopsudo apt-get install nvtoptensorflow workloadnvidia-docker run --rm -ti tensorflow/tensorflow:r0.9-devel-gpuRancher / KubernetesIn your Rancher server (or kubernetes host)distribution=$(. /etc/os-release;echo $ID$VERSION_ID)curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.listsudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y nvidia-container-toolkitsudo apt-get install nvidia-container-runtimeupdate daemon.jsonsudo nano /etc/docker/daemon.jsonReplace with:{ &quot;default-runtime&quot;: &quot;nvidia&quot;, &quot;runtimes&quot;: { &quot;nvidia&quot;: { &quot;path&quot;: &quot;/usr/bin/nvidia-container-runtime&quot;, &quot;runtimeArgs&quot;: [] } }}Install one more util for nvidia:sudo apt-get install -y nvidia-docker2RebootThen, using kubectl on your kubernetes / rancher hostkubectl create -f https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/master/nvidia-device-plugin.yml" }, { "title": "I Built Something for Your Homelab...", "url": "/posts/broadlink-control/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, portainer, broadlink, iot, hardware", "date": "2020-10-03 09:00:00 -0500", "snippet": "I am betting you have at least 3 infrared remote controls in your house. I am also willing to be you would love to automate some of these from time to time. Well don’t worry I have the solution for you! In this video we walk through setting up a self-hosted /local only Broadlink Wifi Smart Home Hub that you can use within your own home without connecting to the cloud. Added bonus, I built a Docker container you can pull down and add to your Rancher, Portainer, Synology, QNAP, or any server running Docker or Kubernetes. This includes a python backend and API as well as a ReactJS frontend so that you can discover, learn, and send commands from the web UI or even from the web API. I hope you enjoy it!Watch Video" }, { "title": "Meet Guacamole, Your Remote Access Gateway", "url": "/posts/guacamole-remote-access-gateway/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, self-hosted, guacamole, portainer, docker, vnc, ssh, rdp", "date": "2020-09-26 09:00:00 -0500", "snippet": "Do you have a lot of virtual machines? Are you running Windows, Linux, and Mac and need remote access from a single UI? Well, Apache Guacamole is for you! Apache Guacamole is a clientless remote access gateway that give you a web portal to access any of your clients over standard protocols like VNC, RDP, SSH, TELNET, and more. Join me in this step by step tutorial as we set up a self-hosted version of Guacamole in your homelab. As an added bonus, we’ll set up 2FA (multifactor authentication) to help secure Guacamole. Oh, yeah, and we’ll do this all in Docker and or Kubernetes, it’s up to you! :)Watch Video" }, { "title": "Bridge Mode with UniFi Access Points", "url": "/posts/unifi-ap-bridge-mode/", "categories": "homelab", "tags": "homelab, network, unifi, hardware", "date": "2020-09-19 09:00:00 -0500", "snippet": "Do you have some places where you can’t run ethernet? Do want to extend your ethernet without pulling more cable? Well this is the guide for you. In this step-by-step tutorial we’ll use a Ubiquiti UniFi AP AC PRO and connect a second as a guest, giving use remote ethernet to a remote site! This is the pro tip guide to setting up a wireless bridge! Bonus, we’ll even do a live throughput test to see how much bandwidth we get running in bridge mode with 2 AC Pros!Watch Video" }, { "title": "Build &amp; Deploy Your Own Code in Your Homelab!", "url": "/posts/self-hosted-devops-stack/", "categories": "self-hosted, homelab", "tags": "homelab, rancher, kubernetes, gitlab", "date": "2020-09-12 09:00:00 -0500", "snippet": "So you’re a software engineer or a developer who wants to self-host your own code in your own homelab? Well this is the tutorial for you! In this step-by-step guide we’ll walk through setting up a repo, building and testing our own code (with unit tests) in a self-hosted Gitlab CI runner in our CI pipeline, then we’ll build a Docker image and push it up to a container registry, then we’ll use kubectl in our CD pipeline to deploy our Docker container to our self-hosted kubernetes cluster! This all happens in a couple of minutes and then we’ll truly have continuous integration and continuous delivery in our homelab!Watch VideoHelpful videos1 - Set Up Kubernetes with Rancher2 - Set up a reverse proxy and SSL with Traefik3 - Expose Rancher and Kubernetes API SecurelyGitLab react appSee the app here:https://github.com/techno-tim/techno-reactDocker file:https://github.com/techno-tim/techno-react/blob/master/DockerfileKubernetes deployment yamlhttps://github.com/techno-tim/techno-react/blob/master/kubernetes/deployment.yamlnginx config for your react applicationhttps://github.com/techno-tim/techno-react/blob/master/nginx.confpbcopy for WSL on Windowshttps://www.techtronic.us/pbcopy-pbpaste-for-wsl/https://www.techtronic.us/pbcopy-pbpaste-for-wsl/Example config.toml for your GitLab runner.concurrent = 1check_interval = 0[session_server] session_timeout = 1800[[runners]] name = &quot;rancher-gitlab-runner&quot; url = &quot;https://gitlab.com&quot; token = &quot;your-gitlab-runner-token&quot; executor = &quot;docker&quot; [runners.custom_build_dir] [runners.cache] [runners.cache.s3] [runners.cache.gcs] [runners.docker] tls_verify = false image = &quot;docker:stable&quot; privileged = false disable_entrypoint_overwrite = false oom_kill_disable = false disable_cache = false volumes = [\\&quot;/var/run/docker.sock:/var/run/docker.sock\\&quot;, \\&quot;/cache\\&quot;] shm_size = 0example ~/.kube/config for your GitLab secretapiVersion: v1kind: Configclusters:- name: &quot;cluster1&quot; cluster: server: &quot;https://your.rancher.url/k8s/clusters/c-cluster-id&quot;users:- name: &quot;cluster1&quot; user: token: &quot;your kubernetes token&quot;contexts:- name: &quot;cluster1&quot; context: user: &quot;cluster1&quot; cluster: &quot;cluster1&quot;current-context: &quot;cluster1&quot;" }, { "title": "SSL, Traefik, and OAuth for Rancher! (Google, GitHub, Keycloak, Azure, and more!)", "url": "/posts/host-rancher-securely/", "categories": "kubernetes, rancher", "tags": "homelab, rancher, kubernetes, github", "date": "2020-09-05 09:00:00 -0500", "snippet": "Do you want to self host your Rancher UI securely in your homelab? Have you thought about putting your Rancher UI behind Traefik and your reverse proxy to get free SSL certificates using Let’s Encrypt? Do you want to make your Rancher UI available publicly and secure it using 3rd party OAuth providers like Google, GitHub, Keycloak, Okta, Shibboleth, and more? Well this is the guide for you. In this step-by-step tutorial we’ll walk through setting up the Rancher UI to use Traefik reverse proxy, get SSL certificates using Let’s Encrypt, host our UI publicly, and then add 3rd party OAuth providers so that we can use 2 factor authentication (2FA) and all of the other security features auth providers give us.Watch Video" }, { "title": "Portainer 2.0 -- Now with more Kubernetes!", "url": "/posts/portainer-2/", "categories": "portainer", "tags": "homelab, kubernetes, portainer", "date": "2020-08-29 09:00:00 -0500", "snippet": "What’s new in Portainer 2.0? Well, a ton. With the release of Portainer 2 you now have the option to install Kubernetes. This makes installing, managing, and deploying Kubenetes really easy. In this step by step tutorial, we’ll start with nothing and end up with a fully working Portainer 2 server running Kubernetes. We’ll set up k3s using k3d, install kubectl, and then spin up Portainer. As an added bonus, we’ll also run a Minecraft server in Kubernetes as a proof of work. Double bonus, we’ll cover how to pronounce kubectl…Watch VideoLet’s get startedHere are the commands used in the video. Be sure to use them appropriately.Install ubuntuhttps://ubuntu.com/Install DockerTo install docker, see https://techno-tim.github.io/posts/docker-compose-install/Install kubectlhttps://kubernetes.io/docs/tasks/tools/install-kubectl/curl -LO &quot;https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl&quot;chmod +x ./kubectlsudo mv ./kubectl /usr/local/bin/kubectlkubectl version --clientInstall k3dhttps://github.com/rancher/k3dcurl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bashInstall k3sk3d cluster create portainer --api-port 6443 --servers 1 --agents 1 -p &quot;30000-32767:30000-32767@server:0&quot;k3d cluster create portainer --api-port 6443 --servers 1 --agents 1 -p &quot;30000-32767:30000-32767@server:0&quot;Install Portainerhttps://github.com/portainer/k8skubectl create namespace portainerkubectl apply -n portainer -f https://raw.githubusercontent.com/portainer/k8s/master/deploy/manifests/portainer/portainer.yamlThe Portainer UI is hosted on port `30777` Example: `http://192.168.0.1:30777`" }, { "title": "Self-Host All Your Homelab Services with DuckDNS -- Free Dynamic DNS Running on Docker", "url": "/posts/duck-dns/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, portainer, duckdns", "date": "2020-08-22 09:00:00 -0500", "snippet": "Are you trying to access your self-hosted services outside of your firewall? Are you tired of trying to remember your IP when away, or worse yet, having your ISP change your IP address? Have you not purchased a domain yet but want to access your own personal VPN? If you answered “YES” to any of these, join me as we walk through this step-by-step tutorial and set up DuckDNS, the free dynamic DNS service, using Docker and then move on to use Rancher and Kubernetes.Watch Video" }, { "title": "Self-Hosting Your Homelab Services with SSL -- Let&#39;s Encrypt, MetalLB, Traefik, Rancher, Kubernetes", "url": "/posts/reverse-proxy-kubernetes/", "categories": "kubernetes, rancher", "tags": "homelab, rancher, kubernetes, traefik, wsl", "date": "2020-08-15 09:00:00 -0500", "snippet": "Are you self-hosting lots of services at home in your homelab? Have you been port forwarding or using VPN to access your self-hosted services wishing you had certificates so that you can access them securely over SSL? Well after this video, you can! In this step by step tutorial we’ll walk through setting up Rancher and Kubernetes with a reverse proxy, Kubernetes Ingress, MetalLB, Traefik, Let’s Encrypt, and DNS giving you free certificates.Watch VideoInstall WSL on Windows 10https://www.youtube.com/watch?v=kL8iGErULiwInstall kubectlhttps://kubernetes.io/docs/tasks/tools/install-kubectl/Install MetalLBhttps://metallb.universe.tf/installation/kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yamlkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yamlYou should only ever run this step once.kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=&quot;$(openssl rand -base64 128)&quot;sample config.yamlapiVersion: v1kind: ConfigMapmetadata: namespace: metallb-system name: configdata: config: | address-pools: - name: default protocol: layer2 addresses: - 192.168.1.240-192.168.1.250kubectl apply -f config.yamlTraefiktraefik sample answers yamlchange “staging: true” to “staging: false” once you confirm its all working to get the live certs--- defaultImage: true imageTag: &quot;1.7.14&quot; serviceType: &quot;LoadBalancer&quot; debug: enabled: false rbac: enabled: true ssl: enabled: true enforced: true permanentRedirect: false acme: enabled: true email: &quot;you@example.com&quot; onHostRule: true staging: true logging: true challengeType: &quot;dns-01&quot; dnsProvider: name: &quot;cloudflare&quot; existingSecretName: &quot;cloudflare-dns&quot; persistence: enabled: true dashboard: enabled: true domain: &quot;traefik.example.com&quot; auth: basic: &quot;&quot;Traefik Helmhttps://hub.helm.sh/charts/stable/traefikTraefik DNS Providershttps://docs.traefik.io/https/acme/#providersTroubleshootingBe sure that your Traefik yaml matches the code above exactly, including whitespace. Yaml is whitespace sensitive." }, { "title": "Self-Host Code Server in Your Homelab -- VS Code in a Browser!", "url": "/posts/code-server-self-host/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, portainer, self-hosted, vscode", "date": "2020-08-08 09:00:00 -0500", "snippet": "Have you ever wanted to run VS Code in your browser? What if you had access to your terminal and could pull and commit code as well as push it up to GitHub all from a browser or tablet? That’s exactly what code server does! In this tutorial we’ll walk through step by step of how to install and configure code server to get it self-hosted in your homelab. We’ll start with bare metal and virtualization and then work our way up to Docker, Kubernetes, and Rancher. Then, you don’t have to carry around your laptop anymore! You can preserve battery life on the go and leave the intensive tasks to your homelab server.Watch Video" }, { "title": "How to Upgrade FreeNAS to TrueNAS", "url": "/posts/upgrade-freenas-to-truenas/", "categories": "truenas", "tags": "homelab, truenas", "date": "2020-08-01 09:00:00 -0500", "snippet": "Want to migrate FreeNAS to TrueNAS today? It’s simple using this step by step tutorial. We’ll walk through how to upgrade FreeNAS to TreNAS CORE. We’ll cover upgrading FreeNAS to TrueNAS on a physical machine (bare metal) as well as a virtualized install of FreeNAS. We’ll prepare our services, jails, plugins, virtual machines, pools, and disks for the migration and then upgrade each. We’ll even show you how to do an offline upgrade of TrueNAS and then how to upgrade a ZFS pool with newer feature flags. Finally we’ll walk through what’s different between TrueNAS and FreeNAS.Watch Video" }, { "title": "Proxmox Backup Server Install Tutorial", "url": "/posts/proxmox-backup-server/", "categories": "proxmox", "tags": "homelab, proxmox", "date": "2020-07-25 09:00:00 -0500", "snippet": "Proxmox Backup Server is an enterprise-class client-server backup software that backs up virtual machines, containers, and physical hosts. In this step by step tutorial, we install and configure Proxmox Backup Server (PBS) and back up all of our virtual machines. We’ll start with nothing and end up with a fully functional Proxmox Backup Server with a ZFS datastore you can use to back up and restore your machines today.Watch Video" }, { "title": "Homelab Services Tour -- What am I running on my Homelab?", "url": "/posts/homelab-services-tour-2020/", "categories": "homelab", "tags": "homelab, rancher, kubernetes, proxmox, truenas, docker", "date": "2020-07-18 09:00:00 -0500", "snippet": "In my homelab tour, I showed you my hardware and network setup that powers all the infrastructure at home. Then, many of you asked which services I am hosting on this hardware. Well, here it is. This is a tour of all the self hosted services I have running in my Homelab.Watch Video" }, { "title": "Techno Tim Homelab Tour -- Server Rack and Network", "url": "/posts/homelab-hardware-tour/", "categories": "homelab", "tags": "homelab, hardware", "date": "2020-07-11 09:00:00 -0500", "snippet": "You asked for a tour of my homelab, well here it is. In this tour I will take you through my home server rack and network setup. This includes my all of my home networking equipment, my servers, disk array, and everything else in my server rack.Watch Video" }, { "title": "How to Build a Slack Bot", "url": "/posts/slack-bot/", "categories": "coding", "tags": "coding, self-hosted, slack", "date": "2020-07-04 09:00:00 -0500", "snippet": "Slack is a great chat and communication tool used by small and large businesses as well as personal use. Slack has a great API and great official Node JS clients that help you automate many features of Slack. If you’re thinking of building a bot for Slack, be sure to follow this step by step tutorial on how to build a Slack bot in JavaScript using the Slack API and the Node Slack SDK. With this SDK, we can connect to the Slack Web API and event hook into events using the RTM API and build a bot in just a few minutes that you can add to your Slack server today.Watch Video" }, { "title": "How to Upgrade, Backup, and Restore Rancher 2", "url": "/posts/rancher-2-upgrade-backup-restore/", "categories": "kubernetes, rancher", "tags": "homelab, rancher, kubernetes", "date": "2020-06-27 09:00:00 -0500", "snippet": "It use to be hard to back up Rancher, but with Rancher 2 it’s super simple. Upgrading, backing up, and restoring your Rancher server should be part of your regular routine. Join me in this tutorial as we walk through backing up, upgrading, and restoring a single node Rancher Docker install in just a couple of minutes. Trust me, you’ll feel better after you do.Watch Video Need to install Rancher? See my guide https://www.youtube.com/watch?v=YWqBxCIfxw4 See the full guide from Rancher https://rancher.com/docs/rancher/v2.x/en/upgrades/upgrades/single-node/ Upgrade &amp;amp; Backup Outline Create a copy of the data from your Rancher server container Create a backup tarball Pull the new Docker image Start the new Rancher server container Verify the Upgrade Clean up your old Rancher server containerSee all containersdocker psSee all containers including stopped onesdocker ps -aStop the containerdocker stop &amp;lt;RANCHER_CONTAINER_NAME&amp;gt;Create a data containerdocker create --volumes-from &amp;lt;RANCHER_CONTAINER_NAME&amp;gt; --name rancher-data-&amp;lt;DATE&amp;gt; rancher/rancher:&amp;lt;RANCHER_CONTAINER_TAG&amp;gt;Create a backup tarballdocker run --volumes-from rancher-data-&amp;lt;DATE&amp;gt; -v $PWD:/backup:z busybox tar pzcvf /backup/rancher-data-backup-&amp;lt;RANCHER_VERSION&amp;gt;-&amp;lt;DATE&amp;gt;.tar.gz /var/lib/rancherRun ls and you should see your tarballrancher-data-backup-v2.4.3-2020-06-21.tar.gzPull a new docker imagedocker pull rancher/rancher:&amp;lt;RANCHER_VERSION_TAG&amp;gt;Start your new rancher server container.Use the command you used to create your initial container, it looks something like this.docker run -d --restart=unless-stopped -p 9090:80 -p 9091:443 --privileged -v /opt/rancher:/var/lib/rancher --name=rancher_docker_server rancher/rancher:&amp;lt;RANCHER_VERSION&amp;gt;Check to see if it’s runningdocker psRestoring Rancher from BackupUse the command you used to create your initial container, it looks something like this.docker run -d --restart=unless-stopped -p 9090:80 -p 9091:443 --privileged -v /opt/rancher:/var/lib/rancher --name=rancher_docker_server rancher/rancher:&amp;lt;RANCHER_VERSION&amp;gt;Stop the containerdocker stop &amp;lt;RANCHER_CONTAINER_NAME&amp;gt;Delete state data and replace from backupdocker run --volumes-from &amp;lt;RANCHER_CONTAINER_NAME&amp;gt; -v $PWD:/backup \\busybox sh -c &quot;rm /var/lib/rancher/* -rf &amp;amp;&amp;amp; \\tar pzxvf /backup/rancher-data-backup-&amp;lt;RANCHER_VERSION&amp;gt;-&amp;lt;DATE&amp;gt;.tar.gz&quot;Start the containerdocker start &amp;lt;RANCHER_CONTAINER_NAME&amp;gt;Unofficial WayBackupcd /optdocker stop rancher_docker_serverif this fails it means you named your container something else, find it by running docker pssudo tar czpf rancher-data-backup-VERSION-DATE-unofficial.tar.gz ranchersudo mv rancher-data-backup-VERSION-DATE-unofficial.tar.gz ~/ docker start rancher_docker_serverRestorecd /optdocker stop rancher_docker_serverif this fails it means you named your container something else, find it by running docker pssudo tar xzpf rancher-data-backup-VERSION-DATE-unofficial.tar.gz docker start rancher_docker_serverBackup scriptYour rancher server must be named similar to rancher_docker_server_v2.4.5 otherwise you’ll need to modify this.This will not work with latest tag, so be sure to pin your version.It will need to be run with sudo or scheduled in sudo crontab -erancher_backup.sh# go to rancher dircd /opt# get current rancher tagRANCHER_TAG=$(docker ps | grep rancher/rancher | grep -Eio &#39;rancher/rancher:.{0,6}&#39; | sed &#39;s/rancher\\/rancher://g&#39;)# date formatTODAY=`date -I`# stop docker containerdocker stop rancher_docker_server_$RANCHER_TAG# create tartar czpf rancher-data-backup-$RANCHER_TAG-$TODAY-unofficial.tar.gz rancher# move tarmv rancher-data-backup-$RANCHER_TAG-$TODAY-unofficial.tar.gz /home/USERNAME/backups/rancher_backups/# start serverdocker start rancher_docker_server_$RANCHER_TAGupgrading to a new versionNEW_VERSION_TAG=v2.4.8docker run -d --restart=unless-stopped -p 9090:80 -p 9091:443 --privileged -v /opt/rancher:/var/lib/rancher --name=rancher_docker_server_$NEW_VERSION_TAG rancher/rancher:$NEW_VERSION_TAG" }, { "title": "Meet Heimdall, Your Homelab Application Dashboard", "url": "/posts/heimdall-dashboard/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, portainer, docker, heimdall, self-hosted", "date": "2020-06-20 09:00:00 -0500", "snippet": "Tired of bookmarking all of your self-hosted services only to lose them? Want access to all your sites from anywhere in the world? Well, Heimdall can help with a clean, responsive, and beautiful dashboard for all of your Homelab services. So join me in this tutorial as we install and configure Heimdall on Docker and Kubernetes and build a dashboard with live icons.Watch Video" }, { "title": "Home Assistant on Docker and Kubernetes (Open Source Home Automation)", "url": "/posts/home-assistant/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, portainer, self-hosted, home-assistant", "date": "2020-06-13 09:00:00 -0500", "snippet": "Are you ready to start automating your smart home with the power of open source? Do you already have Home Assistant running but need a little more power than a Raspberry Pi? If so, join me in this easy to follow, step by step tutorial on installing Home Assistant on Docker, Kubernetes, and Rancher. We’ll set it up, walk through and configure the UI, and then move on to configure some Wemo smart switches, Phillips Hue bulbs, Google Home / Chromecast devices, and even create a Dark Mode / Light mode automation script using Phillips Hue Scenes!Watch Videoconfiguration.yaml# Configure a default setup of Home Assistant (frontend, api, etc)default_config:# Text to speechtts: - platform: google_translategroup: !include groups.yamlautomation: !include automations.yamlscript: !include scripts.yamlscene: !include scenes.yamlwemo: discovery: truescripts.yaml&#39;1591564249617&#39;: alias: Dark Mode sequence: - data: group_name: Office scene_name: Gaming service: hue.hue_activate_scene - device_id: f41ccf86433148dcbd8e932d1412f12a domain: switch entity_id: switch.gaming_lights type: turn_on&#39;1591564322588&#39;: alias: Light Mode sequence: - data: group_name: Office scene_name: Energize service: hue.hue_activate_scene - device_id: f41ccf86433148dcbd8e932d1412f12a domain: switch entity_id: switch.gaming_lights type: turn_off" }, { "title": "Virtualize vs. Containerize (Which should I choose?)", "url": "/posts/virtualize-vs-containerize/", "categories": "homelab", "tags": "homelab, rancher, kubernetes, proxmox, docker, portainer", "date": "2020-06-06 09:00:00 -0500", "snippet": "Should I virtualize this? Should I containerize this? These are great questions to ask yourself when spinning up self-hosted services in your Homelab environment. We’ll review my previous video (20 Ways to Use a Virtual Machine (and other ideas for your homelab https://www.youtube.com/watch?v=pxwUXJmAER4) and decide which should run in a Docker container, which should be virtualized with Proxmox, and which should run on hardware as bare metal.Watch Video" }, { "title": "PiHole on Docker and Kubernetes (I almost gave up)", "url": "/posts/pihole-containerized/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, docker, portainer, self-hosted, pi-hole", "date": "2020-05-30 09:00:00 -0500", "snippet": "We know you’ve heard of Pihole and we know you are probably aware of how to install it but… have you tried running it on Docker and Kubernetes using Rancher? Have you configured it for pfSense? Don’t worry, I figured out all the hard stuff for you. So let’s consolidate some hardware and services.Watch VideoUbuntu Fixsudo apt-get updatesudo apt-get install resolvconfsudo nano /etc/resolvconf/resolv.conf.d/headenabled &amp;amp; start servicesudo systemctl enable resolvconf.servicesudo systemctl start resolvconf.serviceadd your upstream DNS (I use Quad9)nameserver 9.9.9.9update resolv.conf after adding nameserversudo resolvconf -uSet pi-hole passwordsudo pihole -a -p" }, { "title": "4 Ways to Install Plex (one is unexpected)", "url": "/posts/plex-containerized/", "categories": "self-hosted", "tags": "homelab, rancher, kubernetes, portainer, docker, plex, self-hosted", "date": "2020-05-23 09:00:00 -0500", "snippet": "I’m a huge fan of virtualization and containerization (if you couldn’t tell already)! Today, we’ll walk though the various ways to install Plex step-by-step. We also see how easy it is to get Plex running on Docker and Kubernetes using Rancher.Watch VideoId for ContainerGet Id and Group Idid yourusernameShould see something like this:uid=1001(technotim) gid=1001(technotim) groups=1001(technotim),27(sudo),999(docker)Mount Shares During BootInstall cifs-utilssudo apt-get install cifs-utilsCreate credentials files for sharesudo nano /home/technotim/.smbcredentialsSet permissionschmod 600 ~/.smbcredentialsusername=yourUsyourusernameername password=yourPasswordEdit /etc/fstab//192.168.0.22/plex_media/movies /mnt/movies cifs credentials=/home/technotim/.smbcredentials 0 0//192.168.0.22/plex_media/music /mnt/music cifs credentials=/home/technotim/.smbcredentials 0 0Then reboot orsudo mount -ato mount" }, { "title": "How to Virtualize Your Home Router / Firewall Using pfSense", "url": "/posts/proxmox-pfsense/", "categories": "homelab", "tags": "homelab, rancher, kubernetes", "date": "2020-05-16 09:00:00 -0500", "snippet": "It’s time to say goodbye to your home router and start virtualizing it using Proxmox and pfSense.pfSense Community Edition Download: https://www.pfsense.org/download/Get started with Proxmox today: https://www.youtube.com/watch?v=7OVaWaqO2aUWatch VideoEnable PCI Passthroughhttps://pve.proxmox.com/wiki/PCI(e)_Passthrough" }, { "title": "Setup and Best Settings for Streamlabs OBS on Mac", "url": "/posts/streamlabs-mac/", "categories": "streaming", "tags": "streaming, mac, streamlabs, obs", "date": "2020-05-09 09:00:00 -0500", "snippet": "Streamlabs OBS for MacOS is here! In this video we’ll walk through setting up Streamlabs step by step. We’ll install Streamlabs OBS, set up desktop audio with iShowU Audio Capture so you can capture desktop audio, configure our webcam and game capture with a Cam Link, set up our alerts, configure the best possible streaming settings for Streamlabs, adjust our streaming layout, and go live.Watch Video" }, { "title": "How to Build a Twitch Bot Using TMI.JS (a moderator bot)", "url": "/posts/twitch-bot/", "categories": "coding", "tags": "coding, self-hosted, twitch, javascript", "date": "2020-05-03 09:00:00 -0500", "snippet": "Let’s build a bot! Not a bad bot like a view bot, but bot for good. Let’s build a Twitch moderator bot using tmi.js! The Twitch API is powerful and and already has lots of great bots however no bot has the flexibility of creating your own! In this video I will show you how to build a Twitch bot using TMI.JS from start to finish. You’ll see how to use the developer portal, set up oauth, set the correct scopes, get an access token, create a bot using JavaScript, NodeJS, and NPM, invite the bot to your Twitch channel, and have it moderate your chat. Also, We have made this bot open source and will continue to contribute to this bot.Watch Video" }, { "title": "20 Ways to Use a Virtual Machine (and other ideas for your homelab)", "url": "/posts/20-ways-virtual-machine/", "categories": "homelab", "tags": "homelab, rancher, kubernetes", "date": "2020-04-26 09:00:00 -0500", "snippet": "Looking for new ideas on how to use your virtual machines? Well, here’s the top 20 ways to use your virtual machines in your homelab.Watch Video" }, { "title": "Convert ANY Desk to a STANDING Desk: Home Office Upgrade", "url": "/posts/office-upgrade/", "categories": "vlog", "tags": "homelab, office, hardware", "date": "2020-04-19 09:00:00 -0500", "snippet": "I decided to tear apart our office and convert my old Ikea hack table tops into a standing desk. Oh, and I also clamped on 3 - 27” 1440p gaming monitors while I was at it 😉Watch Video" }, { "title": "Docker, Rancher, Kubernetes... Minecraft? (Setup and Install Tutorial)", "url": "/posts/docker-rancher-kubernetes/", "categories": "homelab", "tags": "homelab, rancher, kubernetes, docker, minecraft, gaming", "date": "2020-04-09 09:00:00 -0500", "snippet": "If you want to set up Kubernetes at home using Rancher to run Docker containers, this is the guide for you. This is a step by step tutorial of how to install and configure Rancher, Docker, and Kubernetes for your homelab. In this video we set up and configure a Minecraft server in just a matter of minutes with some enterprise like features. You can use this same process to spin up other Docker containers at home on your server or desktop.Watch VideoThe two paths in the workload configuration need to be reversed: Path on the Node should be mc Mount Point should be /dataYou’ll want to use a command similar to this so that there aren’t any port conflicts with other services or kubernetes itself.Also, you may want to consider pinning your docker tag to a version other than latest to make backing up and upgrading easier. See here for the latest version.docker run -d --restart=unless-stopped -p 9090:80 -p 9091:443 --privileged -v /opt/rancher:/var/lib/rancher --name=rancher_docker_server rancher/rancher:latestTroubleshooting Make sure you have a static IP on your Rancher host Be sure to use the ports above if you want to add SSL later and use commands in future videos The new UI is now the “Cluster Explorer”. You can toggle between this and the “Cluser Manager” UI by clicking the button. Do not create workloads in the local cluster. This is a management cluster for Rancher. You should create new cluster for your workload, just like in this video." }, { "title": "How to Update Proxmox VE (No subscription required)", "url": "/posts/proxmox-update/", "categories": "proxmox", "tags": "homelab, proxmox", "date": "2020-04-02 09:00:00 -0500", "snippet": "Have you been thinking about updating your Proxmox VE server? Well, what are you waiting for? Upgrade your Proxmox server in your home lab in just a few minutes with this step-by-step tutorial!Watch VideoEdit /etc/apt/sources.listdeb http://ftp.us.debian.org/debian buster main contribdeb http://ftp.us.debian.org/debian buster-updates main contrib# security updatesdeb http://security.debian.org buster/updates main contrib# not for production usedeb http://download.proxmox.com/debian buster pve-no-subscriptionRunapt-get updateapt dist-upgrade" }, { "title": "Remote Gaming! (and Video Encoding using Proxmox and GPU Passthrough)", "url": "/posts/gpu-passthrough/", "categories": "homelab", "tags": "homelab, rancher, kubernetes", "date": "2020-03-26 09:00:00 -0500", "snippet": "Are you looking to build a remote gaming machine and passthrough your GPU to a virtual machine? Do you want to use GPU acceleration for transcoding Plex or Adobe Media Encoder? Do you dream of setting up Steam Link or Remote Play In Home Streaming and streaming games to any screen in your house? If so, this complete step-by-step guide of how to passthrough your Nvidia or AMD video card through to a guest VM using Proxmox VE! If not, well, please watch this anyway.Watch Videoedit grub/etc/default/grubChange this line:GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on pcie_acs_override=downstream,multifunction video=efifb:eek:ff&quot;runupdate-grubrebootrebootEdit/etc/modulesvfiovfio_iommu_type1vfio_pcivfio_virqfdrebootrebootqm.conf (will be something like 100.conf)agent: 1balloon: 4096bios: ovmfboot: cdnbootdisk: virtio0cores: 8cpu: host,hidden=1,flags=+pcidefidisk0: fast1:vm-100-disk-1,size=128Khostpci0: 02:00,pcie=1,x-vga=1hostpci1: 04:00.0,rombar=0ide0: none,media=cdrommachine: q35memory: 14336name: beamnuma: 0ostype: win10scsihw: virtio-scsi-pcismbios1: uuid=d6febb0d-4242-4bdb-8aea-7c03e7b5df0esockets: 1unused0: storage1:vm-100-disk-0unused1: slow1:vm-100-disk-0virtio0: fast1:vm-100-disk-0,size=80Gvmgenid: 524a58dd-7e3e-44f4-abf4-9de0f490d936Add your PCI deviceedit /etc/modprobe.d/pve-blacklist.confblacklist nvidiafbblacklist nvidiablacklist radeonblacklist nouveauTroubleshootingIf your Windows machine fails to boot, you may want to create a new Windows VM using UEFI rather than BIOS.If your motherboard has onboard GPU set in BIOS to use the onboard primarily or exclusively to free up PCIE GPU" }, { "title": "Virtualize Ubuntu Server with Proxmox VE", "url": "/posts/proxmox-ubuntu-server/", "categories": "proxmox", "tags": "proxmox, ubuntu, linux", "date": "2020-03-20 09:00:00 -0500", "snippet": "Do you need to virtualize Ubuntu Server with Proxmox? Join me as we install and configure Ubuntu Server LTS on Proxmox VE step-by-step using the best performance options.Watch Video" }, { "title": "Virtualize Windows 10 with Proxmox VE", "url": "/posts/proxmox-windows/", "categories": "proxmox", "tags": "proxmox, windows", "date": "2020-03-18 09:00:00 -0500", "snippet": "Do you need to virtualize Windows 10 with Proxmox? Join me as we install and configure Windows 10 on Proxmox VE step-by-step using the best performance options.Watch Video" }, { "title": "Proxmox VE Install and Setup Tutorial", "url": "/posts/proxmox-setup/", "categories": "homelab", "tags": "homelab, rancher, kubernetes", "date": "2020-03-14 09:00:00 -0500", "snippet": "Do you need to virtualize something at home? Thinking of building your own Homelab? (The answer is YES). Join me as we install and configure Proxmox VE step-by-step.Watch Video" }, { "title": "Setting Up Windows for JavaScript Development THE RIGHT WAY (WSL Terminal NVM Node Yarn VS Code ZSH)", "url": "/posts/windows-developer-setup/", "categories": "coding", "tags": "windows, coding, javascript, wsl, nvm, zsh, node, windows, linux, ubuntu", "date": "2020-03-12 09:00:00 -0500", "snippet": "You want to get started developing JavaScript with NodeJS, ReactJS, or AngularJS but you’re not sure how to get started? This is a complete, step by step guide on how to configure your Windows machines for JavaScript development the right way. You’ll learn how to install and configure Windows, the new Windows Terminal, WSL, Ubuntu, ZSH with Oh My ZSH, yarn, NPM, NVM, NodeJS, and VS Code. We’ll also configure our git client for SSH access to GitHub. This is the perfect beginner tutorial for anyone trying to develop software on a Windows PC.Watch VideoUpdate Ubuntusudo apt-get updatesudo apt-get upgradeinstall zshellsudo apt-get install zshoh-my-zshCheck this site for the command https://ohmyz.sh/#installIt should be something like this:sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;nvmBe sure zshell and oh-my-zsh are working before continuingCheck this site for the command https://github.com/nvm-sh/nvmIt should be something like this, but be sure to use the version from the link abovecurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bashIf nvm doesn’t work, check this https://youtu.be/kL8iGErULiw?t=507Close all terminals and all VS Code instances after doing this stepInstall Nodenvm install 12.16.1Install yarnBe sure nvm and node are working before continuingCheck this site for the latest command https://classic.yarnpkg.com/en/docs/install/#alternatives-stableIt should be something like this, but be sure to use the version from the link abovecurl -o- -L https://yarnpkg.com/install.sh | bashConfigure GitYou’ll want to follow this guide for configuring git. Be sure to follow the LINUX versionhttps://docs.github.com/en/github/using-git/getting-started-with-git-and-githubgit config --global user.name &quot;Techno Tim&quot;git config --global user.email &quot;your_email@example.com&quot;ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;eval $(ssh-agent -s)Cloning a repomkdir code &amp;amp;&amp;amp; cd codeBe sure you choose the right repo before cloning, this is just an examplegit clone git@github.com:techno-tim/techno-boto-discord.gitcd techno-boto-discordyarnContinuing with the bot turotials Discord Bot https://www.youtube.com/watch?v=YSZcyz2-twQ Twitch Bot https://www.youtube.com/watch?v=7uSjKbAUHXg Slack Bot https://www.youtube.com/watch?v=AajBk59nOgw" }, { "title": "How To Create an iSCSI Target with TrueNAS", "url": "/posts/iscsi-truenas/", "categories": "truenas", "tags": "homelab, rancher, kubernetes", "date": "2020-03-06 08:00:00 -0600", "snippet": "Setting up iSCSI with TrueNAS and Windows 10 is super simple with TrueNAS. This is an easy way to have a hard drive installed on your machine that isn’t really attached, it lives on the network.Watch Video" }, { "title": "How to Install and Virtualize TrueNAS with Proxmox", "url": "/posts/virtualize-truenas/", "categories": "truenas", "tags": "truenas, proxmox, windows", "date": "2020-03-01 08:00:00 -0600", "snippet": "Do you want a DIY NAS? Do you want to set up TrueNAS? Have you considered virtualizing TrueNAS with Proxmox? In this video we’ll walk through installing and setting up TrueNAS and configure a samba share for Windows. We’ll also install it on a virtual server using ProxmoxVE that’s running in my Homelab. Both are free and open source.Watch Video" }, { "title": "Let&#39;s Build a Discord Bot Using DiscordJS - Moderator Bot", "url": "/posts/discord-bot/", "categories": "coding", "tags": "coding, javascript, discord, self-hosted", "date": "2020-02-17 08:00:00 -0600", "snippet": "Let’s build a bot! Not a bad bot like a view bot, but bot for good. Let’s build a discord moderator bot using discord.js! Discord is powerful chat + video client and already has lots of great bots however no bot has the flexibility of creating your own! In this video I will show you how to build a discord bot using DiscordJS from start to finish. You’ll see how to use the developer portal, create a bot using JavaScript, NodeJS, and NPM, invite the bot to your Discord server and have it moderate some of your channels. We have made this bot open source and will continue to contribute to this bot.Watch Video" }, { "title": "Touch Portal vs. Stream Deck", "url": "/posts/touchportal-vs-streamdeck/", "categories": "streaming", "tags": "touch-portal, stream-deck, streaming, hardware", "date": "2020-02-02 08:00:00 -0600", "snippet": "Let’s compare Touch Portal to Stream Deck. We’ll walk through some of the similarities and differences between the free software Touch Portal and the Stream Deck hardware/software combination. We’ll see if we can set up, configure in a step by step guide, and clone our Stream Deck interface for OBS using Touch Portal and a mobile device, we’ll review features and experiences, then we’ll choose a winner in the Touch Portal vs. Stream Deck face off!Watch Video" }, { "title": "Upgrade Your ROOM (One of the most OVERLOOKED stream upgrades!)", "url": "/posts/upgrade-your-room/", "categories": "streaming", "tags": "office, hardware, twitch", "date": "2020-01-20 08:00:00 -0600", "snippet": "There are so many upgrades out there for streaming, what do I start with? Video card? Microphone? Audio? CPU? RAM? Lights? I started with one that is overlooked by many streamers, and it’s the room I stream in. So come along with me as give a tour of my stream room makeover! Hopefully this video gives you some stream background ideas for sofas, lights, smart LED lights, accent lighting, coffee tables, plants, rugs, bookshelves, and even Hyrule Historia as I walk through my stream studio setup!Watch Video" }, { "title": "BEST OBS Streaming Settings 2020! 🔴 (Quality, Frame Rate, Bit Rate, Audio, 1080p 60/FPS &amp; MORE!)", "url": "/posts/obs-best-settings/", "categories": "streaming", "tags": "obs, twitch, streaming", "date": "2020-01-14 08:00:00 -0600", "snippet": "Do you want the best settings for OBS in 2020? This is the ultimate OBS settings guide with the BEST OBS settings for streaming Fortnite, Just Chatting APEX Legends, PUBG, or really ANY game. This video includes the best settings for quality, frame rate, bit rate, and audio for streaming at 60 frames per second (FPS) at 1080p (max settings for streamers). This guide works with OBS Studio, Streamlabs OBS (SLOBS), and OBS.LIVE (from StreamElements). I also include various Windows settings and tweaks to give you the best performance while streaming. I even cover the new NVENC settings (NVIDIA NVENC H.264 (new) ) for NVidia graphics cards with Turing Architecture. This is a great guide for anyone who wants to tweak their existing settings or have just installed it for the first time with the default settings.Watch Video" }, { "title": "GoXLR WITH WIRELESS HEADSET - Connect ANY wireless bluetooth headphones", "url": "/posts/goxlr-wireless/", "categories": "streaming", "tags": "goxlr, streaming, twitch, hardware", "date": "2020-01-07 08:00:00 -0600", "snippet": "Connect any wireless headset to a GoXLR or GoXLR mini. In this video, I show you how you can connect any pair of wireless bluetooth headphones to a GoXLR or GoXLR mini. They can be AirPods, Beats, Beats Wireless Pro, Bose, or any other wireless bluetooth headset. You can use this bluetooth adapter transmitter to stream while using the GoXLR or GoXLR mini.I bought these products with my own money because I thought they were cool. Nothing in this video was sponsored.Watch Video" } ]
